{"version":3,"sources":["./src/app/components/alisamiento-exponencial/alisamiento-exponencial.component.ts","./src/app/components/alisamiento-exponencial/alisamiento-exponencial.component.html","./src/app/models.ts","./src/app/components/congruencial-multiplicativo/congruencial-multiplicativo.component.ts","./src/app/components/congruencial-multiplicativo/congruencial-multiplicativo.component.html","./src/app/components/inversa-multiplicativo/inversa-multiplicativo.component.ts","./src/app/components/inversa-multiplicativo/inversa-multiplicativo.component.html","./src/app/components/modelo-inventario/modelo-inventario.component.ts","./src/app/components/modelo-inventario/modelo-inventario.component.html","./src/app/components/linea-espera/linea-espera.component.ts","./src/app/components/linea-espera/linea-espera.component.html","./src/environments/environment.ts","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/promedio-movil/promedio-movil.component.ts","./src/app/components/promedio-movil/promedio-movil.component.html","./src/app/components/congruencial-aditivo/congruencial-aditivo.component.ts","./src/app/components/congruencial-aditivo/congruencial-aditivo.component.html","./src/app/services/service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/regresion-no-lineal/regresion-no-lineal.component.ts","./src/app/components/regresion-no-lineal/regresion-no-lineal.component.html","./src/app/components/montecarlo/montecarlo.component.ts","./src/app/components/montecarlo/montecarlo.component.html","./src/app/components/estadisticos/estadisticos.component.ts","./src/app/components/estadisticos/estadisticos.component.html","./src/app/app.module.ts","./src/app/components/regresion-lineal/regresion-lineal.component.ts","./src/app/components/regresion-lineal/regresion-lineal.component.html","./src/app/app.routing.ts","./src/app/components/cuadrado-medio/cuadrado-medio.component.ts","./src/app/components/cuadrado-medio/cuadrado-medio.component.html","./src/app/services/global.ts","./src/app/components/inversa-aditivo/inversa-aditivo.component.ts","./src/app/components/inversa-aditivo/inversa-aditivo.component.html","./src/app/components/linea-espera-nuevo/linea-espera-nuevo.component.ts","./src/app/components/linea-espera-nuevo/linea-espera-nuevo.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { AlisamientoExponencialModel } from 'src/app/models';\r\nimport { global } from 'src/app/services/global';\r\nimport { Service } from 'src/app/services/service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-alisamiento-exponencial',\r\n  templateUrl: './alisamiento-exponencial.component.html',\r\n  styleUrls: ['./alisamiento-exponencial.component.css'],\r\n  providers:[Service]\r\n})\r\nexport class AlisamientoExponencialComponent implements OnInit {\r\n\r\npublic alisamientoExponencialModel: AlisamientoExponencialModel\r\npublic lista = [];\r\npublic x;\r\npublic sn;\r\npublic grafico = false;\r\npublic mostrar = false;\r\npublic url = global.url;\r\n  constructor(private _service: Service) {\r\n\r\n   this.alisamientoExponencialModel = new AlisamientoExponencialModel(null,null)\r\n   }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  alisamiento(form){\r\n    if (this.alisamientoExponencialModel.lista && this.alisamientoExponencialModel.alfa ) {  \r\n\r\n    this.alisamientoExponencialModel.lista.split(',').forEach((element, i) => {\r\n      this.lista.push(+element)  \r\n      \r\n    });  \r\n\r\n    this.alisamientoExponencialModel.lista = this.lista;\r\n    \r\n      this._service.alisamientoExponencial(this.alisamientoExponencialModel).subscribe(\r\n        response => {\r\n          this.x = response.X;\r\n          this.sn = response.SN; \r\n             \r\n          this.grafico = true;  \r\n          this.limpiar()   \r\n  \r\n        },\r\n        error => {\r\n          console.log(error)\r\n\r\n  \r\n        }\r\n      )\r\n    }else {\r\n      this.camposVacios()\r\n    }\r\n\r\n\r\n  }\r\n  limpiar(){\r\n    this.alisamientoExponencialModel = new AlisamientoExponencialModel(null,null)\r\n  }\r\n  generarGrafico(){\r\n    this.mostrar = true\r\n    // this._service.grafico(this.sn).subscribe(\r\n    //   response => { \r\n    //   },\r\n    //   error => {\r\n    //     console.log(error)\r\n\r\n    //   }\r\n    // ) \r\n\r\n  }\r\n\r\n  success() {\r\n    Swal.fire({\r\n      title: 'Correcto',\r\n      icon: 'success',\r\n      timer: 600,\r\n      showConfirmButton: false\r\n    })\r\n  }\r\n  \r\n  camposVacios() {\r\n    Swal.fire({\r\n      title: 'Validacion',\r\n      text: 'No deje campos vacios',\r\n      icon: 'warning',\r\n    })\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n  <h1 class=\"text-center\">Método alisamiento exponencial</h1>\r\n  <div class=\"container\">\r\n    <div class=\"d-flex justify-content-center align-items-center\">\r\n\r\n        <form class=\" col-4 mt-5\" #alisamientoForm=\"ngForm\" (ngSubmit)=\"alisamiento(alisamientoForm)\">\r\n\r\n          <div class=\"mb-3\">\r\n            <label class=\"form-label\">Ingrese valor de modulo (m):</label>\r\n            <input type=\"number\" class=\"form-control\" placeholder=\" 4\" name=\"alfa\" #alfa=\"ngModel\"\r\n              [(ngModel)]=\"alisamientoExponencialModel.alfa\" [ngModelOptions]=\"{ standalone: true }\" required />\r\n          </div>\r\n          <div class=\"mb-3\">\r\n            <label class=\"form-label\">Agregue la muestra separada con una coma</label>\r\n            <textarea type=\"text\" class=\"form-control\" placeholder=\"999, 877, 54, 111, 545, 22, 22, 45, 44, 4\"\r\n              name=\"lista\" #lista=\"ngModel\" [(ngModel)]=\"alisamientoExponencialModel.lista\"\r\n              [ngModelOptions]=\"{ standalone: true }\" style=\"height: 160px\" required>\r\n            </textarea>\r\n          </div>\r\n\r\n          <button type=\"submit\" class=\"btn btn-danger col-12\" [disabled]=\"alisamientoForm.invalid\">\r\n            Calcular\r\n          </button>\r\n          \r\n          <button type=\"button\" class=\"btn btn-info col-12 mt-2\" (click)=\"generarGrafico()\" *ngIf=\"grafico\">\r\n            Generar gráfico\r\n          </button>\r\n\r\n        </form>\r\n    </div>\r\n\r\n      \r\n      <div class=\"m-auto text-center \" *ngIf=\"grafico\">\r\n        <div class=\"container mt-5\" style=\"overflow-y: auto; overflow-x: hidden; max-height: 400px;\">\r\n          <div class=\"row\">\r\n            <div class=\"col\">\r\n              <table class=\"table\">\r\n                <thead class=\"bg-info\">\r\n                  <tr>\r\n                    <th scope=\"col\">X</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody *ngIf=\"x\">\r\n                  <tr *ngFor=\"let result of x\">\r\n                    <td>{{ result }}</td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            <div class=\"col\">\r\n              <table class=\"table\">\r\n                <thead class=\"bg-info\">\r\n                  <tr>\r\n                    <th scope=\"col\">SN</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody *ngIf=\"sn\">\r\n                  <tr *ngFor=\"let result of sn\">\r\n                    <td>{{ result }}</td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <br><br>\r\n\r\n  <div class=\"d-flex justify-content-center align-items-center\">\r\n\r\n    <img *ngIf=\"mostrar\" src=\"{{url+'grafico/'+sn}}\" width=\"600px\" />\r\n\r\n</div>","export class CuadradoMedioModel {\r\n    constructor(\r\n        public n: number, //semilla\r\n        public r: number,   //interacciones\r\n    ) {}\r\n}\r\n\r\nexport class CongruencialAditivoModel {\r\n    constructor(\r\n        public m: number, //modulo\r\n        public x0: number,   //semilla\r\n        public a: number, //multiplicador\r\n        public c: number,   //incremento\r\n        public n: number, //interacciones\r\n    ) {}\r\n}\r\n\r\nexport class CongruencialMultiplicativoModel {\r\n    constructor(\r\n        public m: number, //modulo\r\n        public x0: number,   //semilla\r\n        public a: number, //multiplicador\r\n        public n: number, //interacciones\r\n    ) {}\r\n}\r\n// promedioMovil sin modelo\r\n\r\nexport class AlisamientoExponencialModel {\r\n    constructor(\r\n        public lista: any,   //muestra\r\n        public alfa: number //modulo\r\n      \r\n    ) {}\r\n}\r\n\r\n\r\nexport class RegresionLinealModel {\r\n    constructor(\r\n        public x: any,   //valores en x\r\n        public y: any //valores en y\r\n      \r\n    ) {}\r\n}\r\n\r\nexport class RegresionNoLinealModel {\r\n    constructor(\r\n        public x: any,   //valores en x\r\n        public y: any //valores en y\r\n      \r\n    ) {}\r\n}\r\n\r\nexport class MontecarloModel {\r\n    constructor(\r\n        public m: number, //modulo\r\n        public x0: number,   //semilla\r\n        public a: number, //multiplicador\r\n        public c: number,   //incremento\r\n        public n: number, //interacciones\r\n        public lista: any // muestra \r\n      \r\n    ) {}\r\n}\r\n\r\nexport class InversoAditivoModel {\r\n    constructor(\r\n        public m: number, //modulo\r\n        public x0: number,   //semilla\r\n        public a: number, //multiplicador\r\n        public c: number,   //incremento\r\n        public n: number, //interacciones\r\n        public landa: number // landa\r\n    ) {}\r\n}\r\n\r\nexport class InversoMultiplicativoModel {\r\n    constructor(\r\n        public m: number, //modulo\r\n        public x0: number,   //semilla\r\n        public a: number, //multiplicador\r\n        public n: number, //interacciones\r\n        public landa: number // landa\r\n    ) {}\r\n}\r\n\r\nexport class LineaEsperaModel {\r\n    constructor(\r\n        public nu: number, //modulo       \r\n        public landa: number, // landa\r\n        public clientes: number // numero clientes\r\n\r\n    ) {}\r\n}\r\n\r\nexport class InventarioModel {\r\n    constructor(\r\n        public D: number, //       \r\n        public Co: number, // \r\n        public Ch: number, // \r\n        public P: number, // \r\n        public Tespera: number, // \r\n        public DiasAno: number // \r\n\r\n    ) {}\r\n}\r\nexport class LineaEsperaNuevoModel {\r\n    constructor(\r\n        public x:  any,\r\n        public y: any,\r\n        public nu: number, //modulo       \r\n        public landa: number, // landa\r\n        public clientes: number // numero clientes\r\n\r\n    ) {}\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { CongruencialMultiplicativoModel } from 'src/app/models';\r\nimport { global } from 'src/app/services/global';\r\nimport { Service } from 'src/app/services/service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-congruencial-multiplicativo',\r\n  templateUrl: './congruencial-multiplicativo.component.html',\r\n  styleUrls: ['./congruencial-multiplicativo.component.css'],\r\n  providers:[Service]\r\n})\r\nexport class CongruencialMultiplicativoComponent implements OnInit {\r\n\r\npublic congruencialMultiplicativoModel: CongruencialMultiplicativoModel\r\npublic xn;\r\npublic ri;\r\npublic grafico;\r\npublic mostrar = false\r\npublic url = global.url\r\n\r\nconstructor(private _service: Service) {\r\n  this.congruencialMultiplicativoModel = new CongruencialMultiplicativoModel(null, null, null, null);\r\n  this.grafico = false;\r\n\r\n  }\r\n\r\n ngOnInit(): void {\r\n }\r\n\r\n congruencialMultiplicativo(form){\r\n  if (this.congruencialMultiplicativoModel.a && this.congruencialMultiplicativoModel.x0 &&\r\n        this.congruencialMultiplicativoModel.m && this.congruencialMultiplicativoModel.n) {\r\n\r\n   this._service.congruencialMultiplicativo(this.congruencialMultiplicativoModel).subscribe(\r\n     response => {\r\n       this.xn = response.Xn;\r\n       this.ri = response.ri;\r\n       \r\n       this.grafico = true;\r\n\r\n     },\r\n     error => {\r\n       console.log(error)\r\n\r\n     }\r\n   )\r\n    } else {\r\n\r\n      this.camposVacios()\r\n\r\n    }\r\n\r\n\r\n }\r\n\r\n limpiar(){\r\n  this.congruencialMultiplicativoModel = new CongruencialMultiplicativoModel(null, null, null, null);\r\n  this.grafico = false;\r\n}\r\n\r\ngenerarGrafico(){\r\n  this.mostrar = true\r\n  // this._service.grafico(this.ri).subscribe(\r\n  //   response => { \r\n  //     this.limpiar()\r\n  //   },\r\n  //   error => {\r\n  //     console.log(error)\r\n\r\n  //   }\r\n  // ) \r\n\r\n}\r\n\r\nsuccess() {\r\n  Swal.fire({\r\n    title: 'Correcto',\r\n    icon: 'success',\r\n    timer: 600,\r\n    showConfirmButton: false\r\n  })\r\n}\r\n\r\ncamposVacios() {\r\n  Swal.fire({\r\n    title: 'Campos vacios',\r\n    text: 'Asegurese de llenar todos los campos',\r\n    icon: 'warning',\r\n  })\r\n}\r\n\r\n \r\n\r\n}\r\n","<div class=\"container\">\r\n  <h1 class=\"text-center\">Método congruencial multiplicativo</h1>\r\n  <div class=\"container\">\r\n    <div class=\"d-flex justify-content-center align-items-center\">\r\n\r\n    <form class=\"col-10 mt-5\" #congruencialMultiplicativoForm=\"ngForm\"\r\n      (ngSubmit)=\"congruencialMultiplicativo(congruencialMultiplicativoForm)\">\r\n      <div class=\"row\">\r\n        <div class=\"col\">\r\n          <div class=\"mb-3\">\r\n            <label class=\"form-label\">Modulo (m):</label>\r\n            <input type=\"number\" class=\"form-control\" placeholder=\" 4\" name=\"modulo\" #modulo=\"ngModel\"\r\n              [(ngModel)]=\"congruencialMultiplicativoModel.m\" [ngModelOptions]=\"{ standalone: true }\" required />\r\n          </div>\r\n        </div>\r\n        <div class=\"col\">\r\n          <div class=\"mb-3\">\r\n            <label class=\"form-label\">Semilla (X0):</label>\r\n            <input type=\"number\" class=\"form-control\" placeholder=\" 2\" name=\"semilla\" #semilla=\"ngModel\"\r\n              [(ngModel)]=\"congruencialMultiplicativoModel.x0\" [ngModelOptions]=\"{ standalone: true }\" required />\r\n          </div>\r\n        </div>\r\n        <div class=\"col\">\r\n          <div class=\"mb-3\">\r\n            <label class=\"form-label\">Multiplicador (a):</label>\r\n            <input type=\"number\" class=\"form-control\" placeholder=\" 3\" name=\"multiplicador\" #multiplicador=\"ngModel\"\r\n              [(ngModel)]=\"congruencialMultiplicativoModel.a\" [ngModelOptions]=\"{ standalone: true }\" required />\r\n          </div>\r\n        </div>\r\n        <div class=\"col\">\r\n\r\n          <div class=\"mb-3\">\r\n            <label class=\"form-label\">Interacciones (n):</label>\r\n            <input type=\"number\" class=\"form-control\" placeholder=\" 10\" name=\"interacciones\" #interacciones=\"ngModel\"\r\n              [(ngModel)]=\"congruencialMultiplicativoModel.n\" [ngModelOptions]=\"{ standalone: true }\" required />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col\">\r\n          <button type=\"submit\" class=\"btn btn-danger col-3\" [disabled]=\"congruencialMultiplicativoForm.invalid\">\r\n            Calcular\r\n          </button>\r\n          \r\n          <button type=\"button\" class=\"btn btn-info ml-2 col-3\" (click)=\"generarGrafico()\" *ngIf=\"grafico\">\r\n            Generar gráfico\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n    </div>\r\n    <div class=\"col-6 m-auto text-center \" *ngIf=\"grafico\" >\r\n\r\n<div class=\"container mt-5\" style=\"overflow-y: auto; overflow-x: hidden; max-height: 400px;\">\r\n  <div class=\"row\">\r\n    <div class=\"col\">\r\n      <table class=\"table\">\r\n        <thead class=\"bg-info\">\r\n          <tr>\r\n            <th scope=\"col\">XN</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody *ngIf=\"xn\">\r\n          <tr *ngFor=\"let result of xn\">\r\n            <td>{{ result }}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n    <div class=\"col\">\r\n      <table class=\"table\">\r\n        <thead class=\"bg-info\">\r\n          <tr>\r\n            <th scope=\"col\">ri</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody *ngIf=\"ri\">\r\n          <tr *ngFor=\"let result of ri\">\r\n            <td>{{ result }}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </div>\r\n</div>\r\n</div>\r\n<br><br>\r\n\r\n<div class=\"d-flex justify-content-center align-items-center\">\r\n\r\n  <img *ngIf=\"mostrar\" src=\"{{url+'grafico/'+ri}}\" width=\"600px\" />\r\n\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { InversoMultiplicativoModel } from 'src/app/models';\r\nimport { global } from 'src/app/services/global';\r\nimport { Service } from 'src/app/services/service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-inversa-multiplicativo',\r\n  templateUrl: './inversa-multiplicativo.component.html',\r\n  styleUrls: ['./inversa-multiplicativo.component.css'],\r\n  providers: [Service]\r\n})\r\nexport class InversaMultiplicativoComponent implements OnInit {\r\n  public inversoMultiplicativoModel: InversoMultiplicativoModel\r\n  public xn;\r\n  public ri;\r\n  public inversa;\r\n  public grafico;\r\n  public mostrar = false\r\n  public url = global.url\r\n\r\n\r\n  constructor(private _service: Service) {\r\n    this.inversoMultiplicativoModel = new InversoMultiplicativoModel(null, null, null, null, null)\r\n    this.grafico = false\r\n  }\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  inversaMultiplicativo(form) {\r\n    if (this.inversoMultiplicativoModel.a && this.inversoMultiplicativoModel.landa\r\n      && this.inversoMultiplicativoModel.m && this.inversoMultiplicativoModel.n\r\n      && this.inversoMultiplicativoModel.x0) {\r\n      this._service.inversaMultiplicativo(this.inversoMultiplicativoModel).subscribe(\r\n        response => {\r\n          this.xn = response.Xn;\r\n          this.ri = response.ri;\r\n          this.inversa = response.Inversa;\r\n          \r\n          this.grafico = true\r\n          this.limpiar()\r\n\r\n        },\r\n        error => {\r\n          console.log(error)\r\n\r\n        }\r\n      )\r\n    } else {\r\n      this.camposVacios()\r\n\r\n    }\r\n  }\r\n\r\n\r\n\r\n  limpiar() {\r\n    this.inversoMultiplicativoModel = new InversoMultiplicativoModel(null, null, null, null, null)\r\n    // this.grafico = false\r\n\r\n  }\r\n  generarGrafico(){\r\n    this.mostrar = true\r\n\r\n    // this._service.grafico(this.ri).subscribe(\r\n    //   response => { \r\n    //   },\r\n    //   error => {\r\n    //     console.log(error)\r\n\r\n    //   }\r\n    // ) \r\n\r\n  }\r\n  success() {\r\n    Swal.fire({\r\n      title: 'Correcto',\r\n      icon: 'success',\r\n      timer: 600,\r\n      showConfirmButton: false,\r\n    });\r\n  }\r\n\r\n  camposVacios() {\r\n    Swal.fire({\r\n       title: 'Validacion',\r\n      text: 'No deje campos vacios',\r\n      icon: 'warning',\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n  <h1 class=\"text-center\">Transformada inversa multiplicativo</h1>\r\n  <div class=\"container\">\r\n\r\n    <form class=\"col mt-5\" #inversoMultiplicativoForm=\"ngForm\"\r\n      (ngSubmit)=\"inversaMultiplicativo(inversoMultiplicativoForm)\">\r\n      <div class=\"row\">\r\n        <div class=\"col\">\r\n          <div class=\"mb-3\">\r\n            <label class=\"form-label\">Modulo (m):</label>\r\n            <input type=\"number\" class=\"form-control\" placeholder=\" 4\" name=\"modulo\" #modulo=\"ngModel\"\r\n              [(ngModel)]=\"inversoMultiplicativoModel.m\" [ngModelOptions]=\"{ standalone: true }\" required />\r\n          </div>\r\n        </div>\r\n        <div class=\"col\">\r\n          <div class=\"mb-3\">\r\n            <label class=\"form-label\">Semilla (X0):</label>\r\n            <input type=\"number\" class=\"form-control\" placeholder=\" 2\" name=\"semilla\" #semilla=\"ngModel\"\r\n              [(ngModel)]=\"inversoMultiplicativoModel.x0\" [ngModelOptions]=\"{ standalone: true }\" required />\r\n          </div>\r\n        </div>\r\n        <div class=\"col\">\r\n          <div class=\"mb-3\">\r\n            <label class=\"form-label\">Multiplicador (a):</label>\r\n            <input type=\"number\" class=\"form-control\" placeholder=\" 3\" name=\"multiplicador\" #multiplicador=\"ngModel\"\r\n              [(ngModel)]=\"inversoMultiplicativoModel.a\" [ngModelOptions]=\"{ standalone: true }\" required />\r\n          </div>\r\n        </div>\r\n        <div class=\"col\">\r\n          <div class=\"mb-3\">\r\n            <label class=\"form-label\">Interacciones (n):</label>\r\n            <input type=\"number\" class=\"form-control\" placeholder=\" 10\" name=\"interacciones\" #interacciones=\"ngModel\"\r\n              [(ngModel)]=\"inversoMultiplicativoModel.n\" [ngModelOptions]=\"{ standalone: true }\" required />\r\n          </div>\r\n        </div>\r\n        <div class=\"col\">\r\n          <div class=\"mb-3\">\r\n            <label class=\"form-label\">Landa (λ):</label>\r\n            <input type=\"number\" class=\"form-control\" placeholder=\" 10\" name=\"landa\" #landa=\"ngModel\"\r\n              [(ngModel)]=\"inversoMultiplicativoModel.landa\" [ngModelOptions]=\"{ standalone: true }\" required />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" class=\"btn btn-danger col-3\" [disabled]=\"inversoMultiplicativoForm.invalid\">\r\n        Calcular\r\n      </button>  \r\n      <button type=\"button\" class=\"btn btn-info  col-3 ml-2\" (click)=\"generarGrafico()\" *ngIf=\"grafico\">\r\n        Generar gráfico\r\n      </button>  \r\n     \r\n    </form>\r\n  </div>\r\n  <div class=\"m-auto text-center \" *ngIf=\"grafico\">\r\n    <div class=\"container mt-5\" style=\"overflow-y: auto; overflow-x: hidden; max-height: 400px;\">\r\n      <div class=\"row\">\r\n        <div class=\"col\">\r\n          <table class=\"table\">\r\n            <thead class=\"bg-info\">\r\n              <tr>\r\n                <th scope=\"col\">XN</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody *ngIf=\"xn\">\r\n              <tr *ngFor=\"let result of xn\">\r\n                <td>{{ result }}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <div class=\"col\">\r\n          <table class=\"table\">\r\n            <thead class=\"bg-info\">\r\n              <tr>\r\n                <th scope=\"col\">ri</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody *ngIf=\"ri\">\r\n              <tr *ngFor=\"let result of ri\">\r\n                <td>{{ result }}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <div class=\"col\">\r\n          <table class=\"table\">\r\n            <thead class=\"bg-info\">\r\n              <tr>\r\n                <th scope=\"col\">Inversa</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody *ngIf=\"inversa\">\r\n              <tr *ngFor=\"let result of inversa\">\r\n                <td>{{ result }}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<br><br>\r\n\r\n<div class=\"d-flex justify-content-center align-items-center\">\r\n\r\n  <img *ngIf=\"mostrar\" src=\"{{url+'grafico/'+ri}}\" width=\"600px\" />\r\n\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { InventarioModel } from 'src/app/models';\r\nimport { Service } from 'src/app/services/service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-modelo-inventario',\r\n  templateUrl: './modelo-inventario.component.html',\r\n  styleUrls: ['./modelo-inventario.component.css'],\r\n  providers:[Service]\r\n})\r\nexport class ModeloInventarioComponent implements OnInit {\r\npublic inventarioModel: InventarioModel;\r\npublic Q;\r\npublic costoOrdenar;\r\npublic costoMantenimiento;\r\npublic costoMinimo;\r\npublic diferencia;\r\npublic result;\r\n\r\n\r\n  constructor(private _service: Service) { \r\n\r\n    this.inventarioModel =  new InventarioModel(null, null, null, null, null, null)\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  inventario(form){\r\n\r\n    if (this.inventarioModel.Ch && this.inventarioModel.Co &&\r\n      this.inventarioModel.D && this.inventarioModel.DiasAno &&\r\n      this.inventarioModel.P && this.inventarioModel.Tespera) {\r\n\r\n\r\n\r\n    this._service.inventario(this.inventarioModel).subscribe(\r\n      response => {\r\n        this.Q = response.Q_return;\r\n        this.costoOrdenar = response.Co_return;\r\n        this.costoMantenimiento = response.Ch_return;\r\n        this.costoMinimo = response.MO_return;\r\n        this.diferencia = response.Diferencia_total_return;\r\n        this.result = response.Resultado;\r\n        \r\n        this.limpiar()\r\n             \r\n      },\r\n      error => {\r\n        console.log(error)\r\n\r\n      }\r\n    )\r\n      }else{\r\n        this.camposVacios()\r\n\r\n      }\r\n\r\n  }\r\n\r\n  limpiar(){\r\n    this.inventarioModel =  new InventarioModel(null, null, null, null, null, null)\r\n\r\n\r\n  }\r\n\r\n  success() {\r\n    Swal.fire({\r\n      title: 'Correcto',\r\n      icon: 'success',\r\n      timer: 600,\r\n      showConfirmButton: false,\r\n    });\r\n  }\r\n\r\n  camposVacios() {\r\n    Swal.fire({\r\n       title: 'Validacion',\r\n      text: 'No deje campos vacios',\r\n      icon: 'warning',\r\n    });\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"container\">\r\n    <h1 class=\"text-center\">Simulación modelo inventario</h1>\r\n    <div class=\"container\">\r\n        <div class=\"d-flex justify-content-center align-items-center\">\r\n\r\n        <form class=\"col-8 mt-5\" #inventarioForm=\"ngForm\" (ngSubmit)=\"inventario(inventarioForm)\">\r\n            <div class=\"row\">\r\n                <div class=\"col\">\r\n                    <div class=\"mb-3\">\r\n                        <label class=\"form-label\">Demanda (D):</label>\r\n                        <input type=\"number\" class=\"form-control\" placeholder=\" 4\" name=\"D\" #D=\"ngModel\"\r\n                            [(ngModel)]=\"inventarioModel.D\" [ngModelOptions]=\"{ standalone: true }\" required />\r\n                    </div>\r\n                </div>\r\n                <div class=\"col\">\r\n\r\n                    <div class=\"mb-3\">\r\n                        <label class=\"form-label\">Costo al ordenar (Co):</label>\r\n                        <input type=\"number\" class=\"form-control\" placeholder=\" 2\" name=\"Co\" #Co=\"ngModel\"\r\n                            [(ngModel)]=\"inventarioModel.Co\" [ngModelOptions]=\"{ standalone: true }\" required />\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"col\">\r\n\r\n                    <div class=\"mb-3\">\r\n                        <label class=\"form-label\">Costo mantenimiento (Ch):</label>\r\n                        <input type=\"number\" class=\"form-control\" placeholder=\" 3\" name=\"Ch\" #Ch=\"ngModel\"\r\n                            [(ngModel)]=\"inventarioModel.Ch\" [ngModelOptions]=\"{ standalone: true }\" required />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n\r\n                <div class=\"col\">\r\n\r\n                    <div class=\"mb-3\">\r\n                        <label class=\"form-label\">Costo del producto (P):</label>\r\n                        <input type=\"number\" class=\"form-control\" placeholder=\" 3\" name=\"P\" #P=\"ngModel\"\r\n                            [(ngModel)]=\"inventarioModel.P\" [ngModelOptions]=\"{ standalone: true }\" required />\r\n                    </div>\r\n                </div>\r\n                <div class=\"col\">\r\n\r\n                    <div class=\"mb-3\">\r\n                        <label class=\"form-label\">Tiempo de espera (T):</label>\r\n                        <input type=\"number\" class=\"form-control\" placeholder=\" 10\" name=\"Tespera\" #Tespera=\"ngModel\"\r\n                            [(ngModel)]=\"inventarioModel.Tespera\" [ngModelOptions]=\"{ standalone: true }\" required />\r\n                    </div>\r\n                </div>\r\n                <div class=\"col\">\r\n\r\n                    <div class=\"mb-3\">\r\n                        <label class=\"form-label\">Dias/Año:</label>\r\n                        <input type=\"number\" class=\"form-control\" placeholder=\" 10\" name=\"DiasAno\" #DiasAno=\"ngModel\"\r\n                            [(ngModel)]=\"inventarioModel.DiasAno\" [ngModelOptions]=\"{ standalone: true }\" required />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <button type=\"submit\" class=\"btn btn-danger col-12\" [disabled]=\"inventarioForm.invalid\">\r\n                Calcular\r\n            </button>\r\n\r\n        </form>\r\n        </div>\r\n    </div>\r\n    <br><br>\r\n    <div class=\"col mt-5 m-auto text-center \" *ngIf=\"result\">\r\n        <table class=\"table\">\r\n            <thead class=\"bg-info\">\r\n                <tr>\r\n                    <th scope=\"col\">Q</th>\r\n                    <th scope=\"col\">CoT</th>\r\n                    <th scope=\"col\">ChT</th>\r\n                    <th scope=\"col\">MOO</th>\r\n                    <th scope=\"col\">CTT</th>\r\n                    <th scope=\"col\">Total de pedidos</th>\r\n                    <th scope=\"col\">Punto de reorden</th>\r\n                    <th scope=\"col\">Tiempo de Pedido</th>\r\n\r\n                </tr>\r\n            </thead>\r\n            <tbody *ngIf=\"result\">\r\n                <tr>\r\n                    <td>{{ result.q }}</td>\r\n\r\n                    <td>{{ result.cot }}</td>\r\n                    <td>{{ result.cht }}</td>\r\n                    <td>{{ result.moq }}</td>\r\n                    <td>{{ result.ctt }}</td>\r\n                    <td>{{ result.n }}</td>\r\n                    <td>{{ result.r }}</td>\r\n                    <td>{{ result.t }}</td>\r\n\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n\r\n\r\n\r\n\r\n    </div>\r\n\r\n\r\n</div>\r\n\r\n    <div class=\"container mt-5 m-auto text-center \" style=\"overflow-y: auto; overflow-x: hidden; max-height: 400px\" *ngIf=\"result\">\r\n    <div class=\"row\">\r\n        <div class=\"col\">\r\n            <table class=\"table\">\r\n                <thead class=\"bg-info\">\r\n                    <tr>\r\n                        <th scope=\"col\">Q</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody *ngIf=\"Q\">\r\n                    <tr *ngFor=\"let result of Q\">\r\n                        <td>{{ result }}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        <div class=\"col\">\r\n            <table class=\"table\">\r\n                <thead class=\"bg-info\">\r\n                    <tr>\r\n                        <th scope=\"col\">Costo de ordenar</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody *ngIf=\"costoOrdenar\">\r\n                    <tr *ngFor=\"let result of costoOrdenar\">\r\n                        <td>{{ result }}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        <div class=\"col\">\r\n            <table class=\"table\">\r\n                <thead class=\"bg-info\">\r\n                    <tr>\r\n                        <th scope=\"col\">Costo Mantenimiento</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody *ngIf=\"costoMantenimiento\">\r\n                    <tr *ngFor=\"let result of costoMantenimiento\">\r\n                        <td>{{ result }}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        <div class=\"col\">\r\n            <table class=\"table\">\r\n                <thead class=\"bg-info\">\r\n                    <tr>\r\n                        <th scope=\"col\">Costo Mínimo total</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody *ngIf=\"costoMinimo\">\r\n                    <tr *ngFor=\"let result of costoMinimo\">\r\n                        <td>{{ result }}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        <div class=\"col\">\r\n            <table class=\"table\">\r\n                <thead class=\"bg-info\">\r\n                    <tr>\r\n                        <th scope=\"col\">Diferencia</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody *ngIf=\"diferencia\">\r\n                    <tr *ngFor=\"let result of diferencia\">\r\n                        <td>{{ result }}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n\r\n<!-- end tabla -->\r\n</div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { LineaEsperaModel } from 'src/app/models';\r\nimport { global } from 'src/app/services/global';\r\nimport { Service } from 'src/app/services/service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-linea-espera',\r\n  templateUrl: './linea-espera.component.html',\r\n  styleUrls: ['./linea-espera.component.css'],\r\n  providers: [Service]\r\n})\r\nexport class LineaEsperaComponent implements OnInit {\r\n  public lineaEsperaModel:LineaEsperaModel;\r\n  public ALL;\r\n  public TILL;\r\n  public TISE;\r\n  public TIRLL;\r\n  public TIISE;\r\n  public TIFSE;\r\n  public TIESP;\r\n  public TIESA;\r\n  public numClientes;\r\n  public grafico = false;\r\n  public mostrar = false\r\n  public url = global.url\r\n\r\n  public suma1\r\n  public suma2\r\n  public promedio1\r\n  public promedio2\r\n\r\n\r\n\r\n  constructor(private _service: Service) {\r\n\r\n    this.lineaEsperaModel = new LineaEsperaModel (null, null, null)\r\n\r\n   }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  calcular() {\r\n\r\n    if (this.lineaEsperaModel.clientes && this.lineaEsperaModel.landa && this.lineaEsperaModel.nu )\r\n     {\r\n\r\n\r\n    this._service.lineaEspera(this.lineaEsperaModel).subscribe(\r\n      response => {\r\n        this.ALL = response.ALL\r\n        this.TILL = response.TILL\r\n        this.TISE = response.TISE\r\n        this.TIRLL = response.TIRLL\r\n        this.TIISE = response.TIISE\r\n        this.TIFSE = response.TIFSE\r\n        this.TIESP = response.TIESP\r\n        this.TIESA = response.TIESA\r\n        this.numClientes = response.numClientes\r\n        this.suma1 = response.suma1\r\n        this.suma2 = response.suma2\r\n        this.promedio1 = response.promedio1\r\n        this.promedio2 = response.promedio2\r\n        this.grafico = true;\r\n        this.limpiar()\r\n       \r\n      },\r\n      error => {\r\n        console.log(error)\r\n\r\n      }\r\n    )\r\n     }else {\r\n       this.camposVacios()\r\n\r\n     }\r\n\r\n\r\n  }\r\n\r\n  limpiar(){\r\n    this.lineaEsperaModel = new LineaEsperaModel (null, null, null)\r\n\r\n  }\r\n  generarGrafico(){\r\n    this.mostrar = true\r\n  }\r\n\r\n  success() {\r\n    Swal.fire({\r\n      title: 'Correcto',\r\n      icon: 'success',\r\n      timer: 600,\r\n      showConfirmButton: false,\r\n    });\r\n  }\r\n\r\n  camposVacios() {\r\n    Swal.fire({\r\n       title: 'Validacion',\r\n      text: 'No deje campos vacios',\r\n      icon: 'warning',\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n    <h1 class=\"text-center\">Simulación linea de espera</h1>\r\n    <div class=\"container\">\r\n        <!-- generar muestra inputs dinamicos para muestra -->\r\n        <form class=\"col mt-5 \">\r\n            <div class=\"row\">\r\n                <div class=\"col\">\r\n                    <div class=\"mb-3\">\r\n                        <label class=\"form-label\">Ingrese el valor de landa (λ)):</label>\r\n                        <input type=\"number\" class=\"form-control\" placeholder=\" 1\" name=\"landa\" #landa=\"ngModel\"\r\n                            [(ngModel)]=\"lineaEsperaModel.landa\" [ngModelOptions]=\"{ standalone: true }\" required />\r\n                    </div>\r\n\r\n                   \r\n                </div>\r\n                <div class=\"col\">\r\n                   \r\n                    <div class=\"mb-3\">\r\n                        <label class=\"form-label\">Ingrese el valor de Mui:</label>\r\n                        <input type=\"number\" class=\"form-control\" placeholder=\" 10\" name=\"nu\" #nu=\"ngModel\"\r\n                            [(ngModel)]=\"lineaEsperaModel.nu\" [ngModelOptions]=\"{ standalone: true }\" required />\r\n                    </div>\r\n                </div>\r\n                <div class=\"col\">\r\n                    <div class=\"mb-3\">\r\n                        <label class=\"form-label\">Ingrese el numero de clientes:</label>\r\n                        <input type=\"number\" class=\"form-control\" placeholder=\" 10\" name=\"clientes\"\r\n                            #clientes=\"ngModel\" [(ngModel)]=\"lineaEsperaModel.clientes\"\r\n                            [ngModelOptions]=\"{ standalone: true }\" required />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n                <button type=\"submit\" class=\"btn btn-danger col-3\" (click)=\"calcular()\">\r\n                    Calcular\r\n                </button>\r\n                <button type=\"button\" class=\"btn btn-info  col-3 ml-2\" (click)=\"generarGrafico()\" *ngIf=\"grafico\">\r\n                    Generar gráfico\r\n                  </button>\r\n\r\n        </form>\r\n    <div class=\"m-auto text-center \" *ngIf=\"grafico\">\r\n\r\n    <div class=\"container mt-5\" style=\"overflow-y: auto; overflow-x: hidden; max-height: 400px\">\r\n        <div class=\"row\">\r\n            <div class=\"col\">\r\n                <table class=\"table\">\r\n                    <thead class=\"bg-info\">\r\n                        <tr>\r\n                            <th scope=\"col\">ALL</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody *ngIf=\"ALL\">\r\n                        <tr *ngFor=\"let result of ALL\">\r\n                            <td>{{ result }}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <div class=\"col\">\r\n                <table class=\"table\">\r\n                    <thead class=\"bg-info\">\r\n                        <tr>\r\n                            <th scope=\"col\">TILL</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody *ngIf=\"TILL\">\r\n                        <tr *ngFor=\"let result of TILL\">\r\n                            <td>{{ result }}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <div class=\"col\">\r\n                <table class=\"table\">\r\n                    <thead class=\"bg-info\">\r\n                        <tr>\r\n                            <th scope=\"col\">TISE</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody *ngIf=\"TISE\">\r\n                        <tr *ngFor=\"let result of TISE\">\r\n                            <td>{{ result }}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <div class=\"col\">\r\n                <table class=\"table\">\r\n                    <thead class=\"bg-info\">\r\n                        <tr>\r\n                            <th scope=\"col\">TIRLL</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody *ngIf=\"TIRLL\">\r\n                        <tr *ngFor=\"let result of TIRLL\">\r\n                            <td>{{ result }}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <div class=\"col\">\r\n                <table class=\"table\">\r\n                    <thead class=\"bg-info\">\r\n                        <tr>\r\n                            <th scope=\"col\">TIISE</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody *ngIf=\"TIISE\">\r\n                        <tr *ngFor=\"let result of TIISE\">\r\n                            <td>{{ result }}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <div class=\"col\">\r\n                <table class=\"table\">\r\n                    <thead class=\"bg-info\">\r\n                        <tr>\r\n                            <th scope=\"col\">TIFSE</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody *ngIf=\"TIFSE\">\r\n                        <tr *ngFor=\"let result of TIFSE\">\r\n                            <td>{{ result }}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <div class=\"col\">\r\n                <table class=\"table\">\r\n                    <thead class=\"bg-info\">\r\n                        <tr>\r\n                            <th scope=\"col\">TIESP</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody *ngIf=\"TIESP\">\r\n                        <tr *ngFor=\"let result of TIESP\">\r\n                            <td>{{ result }}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <div class=\"col\">\r\n                <table class=\"table\">\r\n                    <thead class=\"bg-info\">\r\n                        <tr>\r\n                            <th scope=\"col\">TIESA</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody *ngIf=\"TIESA\">\r\n                        <tr *ngFor=\"let result of TIESA\">\r\n                            <td>{{ result }}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n\r\n    <!-- nueva tabla -->\r\n<div class=\"container mt-5\" style=\"overflow-y: auto; overflow-x: hidden; max-height: 400px\">\r\n    <div class=\"row\">\r\n        <div class=\"col\">\r\n            <table class=\"table\">\r\n                <thead class=\"bg-info\">\r\n                    <tr>\r\n                        <th scope=\"col\">SUMA TIESP</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody *ngIf=\"ALL\">\r\n                    <tr >\r\n                        <td>{{ suma1 }}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        <div class=\"col\">\r\n            <table class=\"table\">\r\n                <thead class=\"bg-info\">\r\n                    <tr>\r\n                        <th scope=\"col\">SUMA TIESA</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody *ngIf=\"TILL\">\r\n                    <tr>\r\n                        <td>{{ suma2 }}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        <div class=\"col\">\r\n            <table class=\"table\">\r\n                <thead class=\"bg-info\">\r\n                    <tr>\r\n                        <th scope=\"col\">PROMEDIO TIESP</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody *ngIf=\"TISE\">\r\n                    <tr>\r\n                        <td>{{ promedio1 }}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        <div class=\"col\">\r\n            <table class=\"table\">\r\n                <thead class=\"bg-info\">\r\n                    <tr>\r\n                        <th scope=\"col\">PROMEDIO TIESA</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody *ngIf=\"TIRLL\">\r\n                    <tr >\r\n                        <td>{{ promedio2 }}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n       \r\n        \r\n    </div>\r\n</div>\r\n</div>\r\n</div>\r\n<br><br>\r\n<div class=\"d-flex justify-content-center align-items-center\">\r\n    <!-- 'ALL': this.ALL, 'TILL':this.TILL, 'TISE': this.TISE, 'TIRLL': this.TIRLL,'TIISE': this.TIISE, 'TIFSE':this.TIFSE, 'TIESP':this.TIESP, 'TIESA':this.TIESA -->\r\n    <img *ngIf=\"mostrar\" src=\"{{url+'graficols/'+ALL+'/'+TILL+'/'+TISE+'/'+TIRLL+'/'+TIISE+'/'+TIFSE+'/'+TIESP+'/'+TIESA}}\" width=\"600px\" />\r\n\r\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","\r\n\r\n\r\n\r\n<!-- \r\n            <h3>Metodos de simulación</h3>\r\n            <hr>\r\n            <br> -->\r\n            <section id=\"hero\">\r\n                    <div class=\"row\">\r\n                      <div class=\"col-4 d-flex justify-content-center align-items-center\">\r\n                          <img src=\"../../../assets/images.jpg\"alt=\"Grafico\" height=\"70%\" width=\"70%\">\r\n                      </div>\r\n                    <div class=\"col-lg-8  order-2 order-lg-1 float-right\" data-aos=\"fade-up\" data-aos-delay=\"200\">\r\n                      <h3>Sistema de Simulación Ingresos y Egresos de Pacientes Covid-19 De Hospital General Manta-IESS</h3> \r\n                       <p> La infección por coronavirus, causante de COVID-19, produce cuadros clínicos de diferente gravedad, evolucionando en los casos más graves a cuadros de insuficiencia respiratoria aguda con distrés respiratorio que precisan del ingreso en una unidad de cuidados intensivos (UCI) y de ventilación mecánica provancado que el sistema de emergencias de la unidad se sature. </p>\r\n                     <p>por ende surgio le necesidad de establecer un triaje al ingreso, basado en privilegiar la “mayor esperanza de vida”, y unos criterios de ingreso claros y de descarga de la UCI, basados en un principio de proporcionalidad y de justicia distributiva, para maximizar el beneficio del mayor número posible de personas y aumentar la disponibilidad de los recursos.</p>\r\n                     <div class=\"row\">\r\n                      <div class=\"col-4 d-flex justify-content-center align-items-center\">\r\n                          <img src=\"../../../assets/hosptial.jpg\"alt=\"Grafico\" height=\"100%\" width=\"100%\">\r\n                        </div>\r\n                        <div class=\"col-4 d-flex justify-content-center align-items-center\">\r\n                          <img src=\"../../../assets/covid2.jpg\"alt=\"Grafico\" height=\"100%\" width=\"100%\">\r\n                        </div>\r\n                        <div class=\"col-4 d-flex justify-content-center align-items-center\">\r\n                          <img src=\"../../../assets/personal.jpg\"alt=\"Grafico\" height=\"100%\" width=\"100%\">\r\n                        </div>\r\n                      </div>\r\n                      \r\n<hr>            \r\n<hr>            \r\n<br>  \r\n        <!--   <h2 style=\"color: rgb(55, 90, 104);\">Autora: Catherin Santana Delgado - 6to Nivel</h2>\r\n\r\n                      <div class=\"d-lg-flex\">\r\n                        <a style=\"background-color: rgb(130, 189, 207);\" href=\"https://drive.google.com/file/d/1ZX4cjuXtwTIlURw9yKmY3RShyHlcmsps/view?usp=sharing\" target=\"_blank\" class=\"btn-get-started scrollto\">Manual de usuario</a>\r\n                        <a style=\"background-color: rgb(134, 194, 194);\" href=\"https://drive.google.com/file/d/1tLa7IL4_9JkfOJhBUV0BhUzHbT59Hz0g/view?usp=sharing\" target=\"_blank\" class=\" ml-2 btn-get-started scrollto\">Informe del proyecto</a>\r\n                        <a style=\"background-color: rgb(231, 143, 127);\" href=\"https://www.youtube.com/watch?v=65d_tXKhpTg\" target=\"_blank\" class=\" ml-2 btn-get-started scrollto\">Video explicativo</a>\r\n\r\n                      </div>\r\n                    </div>              \r\n                </div>\r\n            \r\n              </section> End Hero -->\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { global } from 'src/app/services/global';\r\nimport { Service } from 'src/app/services/service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-promedio-movil',\r\n  templateUrl: './promedio-movil.component.html',\r\n  styleUrls: ['./promedio-movil.component.css'],\r\n  providers:[Service]\r\n})\r\nexport class PromedioMovilComponent implements OnInit {\r\n  public muestra;\r\n  public lista = [];\r\n  \r\n  public x;\r\n  public MMO3;\r\n  public MMO4;\r\n  public eMM3;\r\n  public eMM4;\r\n  public grafico = false;\r\n  public mostrar = false\r\n  public url = global.url;\r\n\r\n\r\n  constructor(private _service: Service) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n\r\n  aggMuestra(){\r\n\r\n    if (this.muestra) {\r\n      \r\n    \r\n \r\n    this.muestra.split(',').forEach((element, i) => {\r\n      this.lista.push(+element)  \r\n      \r\n    });  \r\n\r\n    this._service.promedioMovil(this.lista).subscribe(\r\n      response => {\r\n        this.x = response.MUESTRA;\r\n        this.MMO3 = response.MM03;\r\n        this.MMO4 = response.MMO4;\r\n        this.eMM3 = response.eMM03;\r\n        this.eMM4 = response.eMM04;\r\n        this.lista = []\r\n        \r\n        this.grafico = true;\r\n        this.limpiar()\r\n        \r\n      },\r\n      error => {\r\n        console.log(error)\r\n\r\n      }\r\n    )\r\n  } else {\r\n    this.camposVacios()\r\n\r\n\r\n  }\r\n\r\n  }\r\n  limpiar(){\r\n    this.muestra = '';\r\n\r\n  }\r\n  generarGrafico(){\r\n    this.mostrar = true\r\n    // let datos = {'x': this.x, 'm3': this.MMO3, 'm4': this.MMO4}\r\n    // this._service.graficoPM(datos).subscribe(\r\n    //   response => { \r\n    //   },\r\n    //   error => {\r\n    //     console.log(error)\r\n\r\n    //   }\r\n    // ) \r\n\r\n  }\r\n\r\n  success() {\r\n    Swal.fire({\r\n      title: 'Correcto',\r\n      icon: 'success',\r\n      timer: 600,\r\n      showConfirmButton: false\r\n    })\r\n  }\r\n  \r\n  camposVacios() {\r\n    Swal.fire({\r\n       title: 'Validacion',\r\n      text: 'No deje campos vacios',\r\n      icon: 'warning',\r\n    })\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"container\">\r\n    <h1 class=\"text-center\">Método promedio movil</h1>\r\n    <div class=\"container\">\r\n        <!-- generar muestra inputs dinamicos para muestra -->\r\n        <div class=\"d-flex justify-content-center align-items-center\">\r\n            <form class=\"col-4 mt-5 \">\r\n                <div class=\"mb-3\">\r\n                    <label class=\"form-label\">Agregue la muestra separada con una coma</label>\r\n                    <textarea type=\"text\" class=\"form-control\" placeholder=\"999, 877, 54, 111, 545, 22, 22, 45, 44, 4\"\r\n                        [(ngModel)]=\"muestra\" [ngModelOptions]=\"{ standalone: true }\" style=\"height: 80px\"\r\n                        required></textarea>\r\n                </div>\r\n                <button type=\"submit\" class=\"btn btn-danger col-12\" (click)=\"aggMuestra()\">\r\n                    Agregar y calcular\r\n                </button>\r\n                <button type=\"button\" class=\"btn btn-info col-12 mt-2\" (click)=\"generarGrafico()\" *ngIf=\"grafico\">\r\n                    Generar gráfico\r\n                  </button>\r\n                \r\n            </form>\r\n        </div>\r\n        <div class=\"col m-auto text-center \" *ngIf=\"grafico\" >\r\n\r\n        <div class=\"container mt-5\" style=\"overflow-y: auto; overflow-x: hidden; max-height: 400px\">\r\n            <div class=\"row\">\r\n                <div class=\"col\">\r\n                    <table class=\"table\">\r\n                        <thead class=\"bg-info\">\r\n                            <tr>\r\n                                <th scope=\"col\">MUESTRA</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody *ngIf=\"x\">\r\n                            <tr *ngFor=\"let result of x\">\r\n                                <td>{{ result }}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <div class=\"col\">\r\n                    <table class=\"table\">\r\n                        <thead class=\"bg-info\">\r\n                            <tr>\r\n                                <th scope=\"col\">MMO_3</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody *ngIf=\"MMO3\">\r\n                            <tr *ngFor=\"let result of MMO3\">\r\n                                <td>{{ result }}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <div class=\"col\">\r\n                    <table class=\"table\">\r\n                        <thead class=\"bg-info\">\r\n                            <tr>\r\n                                <th scope=\"col\">MMO_4</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody *ngIf=\"MMO4\">\r\n                            <tr *ngFor=\"let result of MMO4\">\r\n                                <td>{{ result }}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <div class=\"col\">\r\n                    <table class=\"table\">\r\n                        <thead class=\"bg-info\">\r\n                            <tr>\r\n                                <th scope=\"col\">e_MM3</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody *ngIf=\"eMM3\">\r\n                            <tr *ngFor=\"let result of eMM3\">\r\n                                <td>{{ result }}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <div class=\"col\">\r\n                    <table class=\"table\">\r\n                        <thead class=\"bg-info\">\r\n                            <tr>\r\n                                <th scope=\"col\">e_MM4</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody *ngIf=\"eMM4\">\r\n                            <tr *ngFor=\"let result of eMM4\">\r\n                                <td>{{ result }}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        </div>\r\n    </div>\r\n</div>\r\n<br><br>\r\n\r\n  <div class=\"d-flex justify-content-center align-items-center\">\r\n\r\n    <img *ngIf=\"mostrar\" src=\"{{url+'graficopm/'+x+'/'+MMO3+'/'+MMO4}}\" width=\"600px\" />\r\n\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { CongruencialAditivoModel } from 'src/app/models';\r\nimport { global } from 'src/app/services/global';\r\nimport { Service } from 'src/app/services/service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-congruencial-aditivo',\r\n  templateUrl: './congruencial-aditivo.component.html',\r\n  styleUrls: ['./congruencial-aditivo.component.css'],\r\n  providers: [Service]\r\n\r\n})\r\nexport class CongruencialAditivoComponent implements OnInit {\r\n\r\n  public congruencialAditivoModel: CongruencialAditivoModel;\r\n  public xn;\r\n  public ri;\r\n  public grafico;\r\n  public mostrar = false\r\n  public url = global.url\r\n\r\n  constructor(private _service: Service) {\r\n\r\n    this.congruencialAditivoModel = new CongruencialAditivoModel(null, null, null, null, null);\r\n    this.grafico = false;\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  congruencialAditivo(form) {\r\n    if (this.congruencialAditivoModel.a && this.congruencialAditivoModel.c &&\r\n      this.congruencialAditivoModel.m && this.congruencialAditivoModel.n &&\r\n      this.congruencialAditivoModel.x0) {\r\n\r\n      this._service.congruencialAditivo(this.congruencialAditivoModel).subscribe(\r\n        response => {\r\n          this.xn = response.Xn;\r\n          this.ri = response.ri;\r\n          \r\n          this.grafico = true;\r\n          \r\n        },\r\n        error => {\r\n          console.log(error)\r\n\r\n        }\r\n      )\r\n    } else {\r\n      this.camposVacios()\r\n\r\n    }\r\n\r\n  }\r\n\r\n  limpiar() {\r\n    this.congruencialAditivoModel = new CongruencialAditivoModel(null, null, null, null, null);\r\n    this.grafico = false;\r\n\r\n  }\r\n\r\n  generarGrafico(){\r\n    this.mostrar = true\r\n    // this._service.grafico(this.ri).subscribe(\r\n    //   response => { \r\n    //     this.limpiar()\r\n    //   },\r\n    //   error => {\r\n    //     console.log(error)\r\n\r\n    //   }\r\n    // ) \r\n\r\n  }\r\n\r\n  success() {\r\n    Swal.fire({\r\n      title: 'Correcto',\r\n      icon: 'success',\r\n      timer: 600,\r\n      showConfirmButton: false\r\n    })\r\n  }\r\n\r\n  camposVacios() {\r\n    Swal.fire({\r\n       title: 'Validacion',\r\n      text: 'No deje campos vacios',\r\n      icon: 'warning',\r\n    })\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n  <h1 class=\"text-center\">Método congruencial aditivo</h1>\r\n  <div class=\"container\">\r\n    <form class=\"col mt-5\" #congruencialAditivoForm=\"ngForm\"\r\n      (ngSubmit)=\"congruencialAditivo(congruencialAditivoForm)\">\r\n      <div class=\"row\">\r\n        <div class=\"col\">\r\n          <div class=\"mb-3\">\r\n            <label class=\"form-label\">Modulo (m):</label>\r\n            <input type=\"number\" class=\"form-control\" placeholder=\" 4\" name=\"modulo\" #modulo=\"ngModel\"\r\n              [(ngModel)]=\"congruencialAditivoModel.m\" [ngModelOptions]=\"{ standalone: true }\" required />\r\n          </div>\r\n        </div>\r\n        <div class=\"col\">\r\n          <div class=\"mb-3\">\r\n            <label class=\"form-label\">Semilla (X0):</label>\r\n            <input type=\"number\" class=\"form-control\" placeholder=\" 2\" name=\"semilla\" #semilla=\"ngModel\"\r\n              [(ngModel)]=\"congruencialAditivoModel.x0\" [ngModelOptions]=\"{ standalone: true }\" required />\r\n          </div>\r\n        </div>\r\n        <div class=\"col\">\r\n          <div class=\"mb-3\">\r\n            <label class=\"form-label\">Multiplicador (a):</label>\r\n            <input type=\"number\" class=\"form-control\" placeholder=\" 3\" name=\"multiplicador\" #multiplicador=\"ngModel\"\r\n              [(ngModel)]=\"congruencialAditivoModel.a\" [ngModelOptions]=\"{ standalone: true }\" required />\r\n          </div>\r\n        </div>\r\n        <div class=\"col\">\r\n          <div class=\"mb-3\">\r\n            <label class=\"form-label\">Incremento (c):</label>\r\n            <input type=\"number\" class=\"form-control\" placeholder=\" 1\" name=\"incremento\" #incremento=\"ngModel\"\r\n              [(ngModel)]=\"congruencialAditivoModel.c\" [ngModelOptions]=\"{ standalone: true }\" required />\r\n          </div>\r\n        </div>\r\n        <div class=\"col\">\r\n          <div class=\"mb-3\">\r\n            <label class=\"form-label\">Interacciones (n):</label>\r\n            <input type=\"number\" class=\"form-control\" placeholder=\" 10\" name=\"interacciones\" #interacciones=\"ngModel\"\r\n              [(ngModel)]=\"congruencialAditivoModel.n\" [ngModelOptions]=\"{ standalone: true }\" required />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col\">\r\n          \r\n      <button type=\"submit\" class=\"btn btn-danger col-3\" [disabled]=\"congruencialAditivoForm.invalid\">\r\n        Calcular\r\n      </button>\r\n      <button type=\"button\" class=\"btn btn-info  col-3 ml-2\" (click)=\"generarGrafico()\" *ngIf=\"grafico\">\r\n        Generar gráfico\r\n      </button>\r\n        </div>\r\n\r\n      \r\n  </div>\r\n    </form>\r\n  </div>\r\n  <div class=\"col-6 m-auto text-center \" *ngIf=\"grafico\" >\r\n    <div class=\"container mt-5\" style=\"overflow-y: auto; overflow-x: hidden; max-height: 400px;\">\r\n      <div class=\"row\">\r\n        <div class=\"col\">\r\n          <table class=\"table\">\r\n            <thead class=\"bg-info\">\r\n              <tr>\r\n                <th scope=\"col\">XN</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody *ngIf=\"xn\">\r\n              <tr *ngFor=\"let result of xn\">\r\n                <td>{{ result }}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <div class=\"col\">\r\n          <table class=\"table\">\r\n            <thead class=\"bg-info\">\r\n              <tr>\r\n                <th scope=\"col\">ri</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody *ngIf=\"ri\">\r\n              <tr *ngFor=\"let result of ri\">\r\n                <td>{{ result }}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n</div>\r\n</div>\r\n\r\n<br><br>\r\n\r\n<div class=\"d-flex justify-content-center align-items-center\">\r\n\r\n  <img *ngIf=\"mostrar\" src=\"{{url+'grafico/'+ri}}\" width=\"600px\" />\r\n\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { global } from './global';\r\n\r\n\r\n\r\n@Injectable()\r\nexport class Service {\r\n    public url: string;\r\n  \r\n\r\n    constructor(private _http: HttpClient) {\r\n        this.url = global.url;\r\n    }\r\n\r\n\r\n    cuadradoMedio(datos): Observable<any> {\r\n\r\n        let headers = new HttpHeaders().set('Content-Type', 'application/x-www-form-urlencoded')\r\n        return this._http.post(this.url + 'cuadrado-medio/', datos, { headers: headers });\r\n\r\n    }\r\n\r\n    congruencialAditivo(datos): Observable<any> {\r\n\r\n        let headers = new HttpHeaders().set('Content-Type', 'application/x-www-form-urlencoded')\r\n        return this._http.post(this.url + 'congruencial-lineal/', datos, { headers: headers });\r\n\r\n    }\r\n    congruencialMultiplicativo(datos): Observable<any> {\r\n\r\n        let headers = new HttpHeaders().set('Content-Type', 'application/x-www-form-urlencoded')\r\n        return this._http.post(this.url + 'congruencial-multiplicativo/', datos, { headers: headers });\r\n\r\n    }\r\n\r\n    promedioMovil(datos): Observable<any> {\r\n\r\n        let headers = new HttpHeaders().set('Content-Type', 'application/x-www-form-urlencoded')\r\n        return this._http.post(this.url + 'promedio-movil/', datos, { headers: headers });\r\n\r\n    }\r\n\r\n    alisamientoExponencial(datos): Observable<any> {\r\n\r\n        let headers = new HttpHeaders().set('Content-Type', 'application/x-www-form-urlencoded')\r\n        return this._http.post(this.url + 'alisamiento-exponencial/', datos, { headers: headers });\r\n\r\n    }\r\n\r\n    regresionLineal(datos): Observable<any> {\r\n\r\n        let headers = new HttpHeaders().set('Content-Type', 'application/x-www-form-urlencoded')\r\n        return this._http.post(this.url + 'regresion-lineal/', datos, { headers: headers });\r\n\r\n    }\r\n\r\n    regresionNoLineal(datos): Observable<any> {\r\n\r\n        let headers = new HttpHeaders().set('Content-Type', 'application/x-www-form-urlencoded')\r\n        return this._http.post(this.url + 'regresion-no-lineal/', datos, { headers: headers });\r\n\r\n    }\r\n\r\n    montecarlo(datos): Observable<any> {\r\n\r\n        let headers = new HttpHeaders().set('Content-Type', 'application/x-www-form-urlencoded')\r\n        return this._http.post(this.url + 'montecarlo/', datos, { headers: headers });\r\n\r\n    }\r\n    inversaAditivo(datos): Observable<any> {\r\n\r\n        let headers = new HttpHeaders().set('Content-Type', 'application/x-www-form-urlencoded')\r\n        return this._http.post(this.url + 'inversa-aditivo/', datos, { headers: headers });\r\n\r\n    }\r\n    inversaMultiplicativo(datos): Observable<any> {\r\n\r\n        let headers = new HttpHeaders().set('Content-Type', 'application/x-www-form-urlencoded')\r\n        return this._http.post(this.url + 'inversa-multiplicativo/', datos, { headers: headers });\r\n\r\n    }\r\n\r\n    lineaEspera(datos): Observable<any> {\r\n\r\n        let headers = new HttpHeaders().set('Content-Type', 'application/x-www-form-urlencoded')\r\n        return this._http.post(this.url + 'linea-espera/', datos, { headers: headers });\r\n\r\n    }\r\n    lineaEsperaNuevo(datos): Observable<any> {\r\n\r\n        let headers = new HttpHeaders().set('Content-Type', 'application/x-www-form-urlencoded')\r\n        return this._http.post(this.url + 'linea-espera-nuevo/', datos, { headers: headers });\r\n\r\n    }\r\n\r\n    inventario(datos): Observable<any> {\r\n\r\n        let headers = new HttpHeaders().set('Content-Type', 'application/x-www-form-urlencoded')\r\n        return this._http.post(this.url + 'modelo-inventario/', datos, { headers: headers });\r\n\r\n    }\r\n    estadisticos(datos): Observable<any> {\r\n\r\n        let headers = new HttpHeaders().set('Content-Type', 'application/x-www-form-urlencoded')\r\n        return this._http.post(this.url + 'estadisticos/', datos, { headers: headers });\r\n\r\n    }\r\n\r\n\r\n\r\n    // GRAFICOS\r\n\r\n    grafico(datos): Observable<any> {\r\n\r\n        let headers = new HttpHeaders().set('Content-Type', 'application/x-www-form-urlencoded')\r\n        return this._http.post(this.url + 'grafico/', datos, { headers: headers });\r\n\r\n    }\r\n    graficoPM(datos): Observable<any> {\r\n\r\n        let headers = new HttpHeaders().set('Content-Type', 'application/x-www-form-urlencoded')\r\n        return this._http.post(this.url + 'graficopm/', datos, { headers: headers });\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'proyectoSimulacion1';\r\n}\r\n","\r\n\r\n  <!-- Sidebar -->\r\n  <!-- <div class=\"sidebar\">\r\n    <h5>Técnicas de simulación</h5>\r\n    <label for=\"\">Metodos estadísticos</label>\r\n    <a [routerLink]=\"['/estadisticos']\" class=\"dropdown-item\">Media Mediana y Moda</a>\r\n  \r\n  </div>\r\n  \r\n  <div class=\"container mt-5\">\r\n\r\n    <router-outlet>\r\n  \r\n    </router-outlet>\r\n</div> -->\r\n\r\n\r\n<div class=\"sidebar\">\r\n\r\n<h5 class=\"text-center mt-2\">Métodos</h5>  \r\n<hr>\r\n  <strong class=\"ml-3\">Estadisticos</strong>\r\n  <hr>\r\n\r\n  <!-- <a [routerLink]=\"['/home']\" class=\"dropdown-item active\">Inicio</a> -->\r\n  <a [routerLink]=\"['/estadisticos']\" class=\"dropdown-item active\">Media Mediana y Moda</a>\r\n\r\n</div>\r\n\r\n<div class=\"content\">\r\n  <div class=\"mt-5\">\r\n\r\n    <router-outlet>\r\n      \r\n    </router-outlet>\r\n  </div>\r\n</div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { RegresionNoLinealModel } from 'src/app/models';\r\nimport { Service } from 'src/app/services/service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-regresion-no-lineal',\r\n  templateUrl: './regresion-no-lineal.component.html',\r\n  styleUrls: ['./regresion-no-lineal.component.css'],\r\n  providers:[Service]\r\n})\r\nexport class RegresionNoLinealComponent implements OnInit {\r\n  public regresionNoLinealModel: RegresionNoLinealModel\r\n  public listaX=[];\r\n  public listaY=[];\r\n  public xcopy;\r\n  public xy;\r\n  public x2;\r\n  public ycopy;\r\n  public x2y;\r\n  public x3;\r\n  public x4;\r\n  public result;\r\n  public grafico = false;\r\n  \r\n    constructor(private _service: Service) {\r\n  \r\n      this.regresionNoLinealModel = new RegresionNoLinealModel(null, null)\r\n      \r\n     }\r\n  \r\n    ngOnInit(): void {\r\n    }\r\n  \r\n    regresionNoLineal(form){\r\n      if (this.regresionNoLinealModel.x && this.regresionNoLinealModel.y ) {  \r\n  \r\n        this.regresionNoLinealModel.x.split(',').forEach((elementx) => {\r\n          this.listaX.push(+elementx)  \r\n          \r\n        });    \r\n  \r\n  \r\n        this.regresionNoLinealModel.y.split(',').forEach((elementy) => {\r\n          this.listaY.push(+elementy)  \r\n          \r\n        });  \r\n    \r\n      // longitud igual de x, y\r\n      if (this.listaX.length === this.listaY.length) {\r\n        this.regresionNoLinealModel.x = this.listaX;\r\n        this.regresionNoLinealModel.y = this.listaY;  \r\n        \r\n          this._service.regresionNoLineal(this.regresionNoLinealModel).subscribe(\r\n            response => {\r\n  \r\n              this.xcopy = response.X;\r\n              this.xy = response.XY;\r\n              this.x2 = response.X2;\r\n              this.x2y = response.X2Y;\r\n              this.ycopy = response.Y;\r\n              this.x3 = response.X3;\r\n              this.x4 = response.X4;\r\n              this.result = response.Result;\r\n              this.regresionNoLinealModel.x = null;\r\n              this.regresionNoLinealModel.y = null;\r\n              \r\n              this.grafico = true;\r\n              this.limpiar()\r\n            },\r\n            error => {\r\n              console.log(error)  \r\n              this.listaX = [];\r\n              this.listaY = [];\r\n      \r\n            }\r\n          )\r\n      }else{\r\n        this.listaX = [];\r\n        this.listaY = [];\r\n        this.noIguales();\r\n\r\n      }\r\n        }else {\r\n    \r\n          this.camposVacios();\r\n        }\r\n    \r\n    }\r\n  \r\n    limpiar(){\r\n      this.regresionNoLinealModel = new RegresionNoLinealModel(null, null)\r\n      \r\n      \r\n    }\r\n\r\n    success() {\r\n      Swal.fire({\r\n        title: 'Correcto',\r\n        icon: 'success',\r\n        timer: 600,\r\n        showConfirmButton: false,\r\n      });\r\n    }\r\n  \r\n    camposVacios() {\r\n      Swal.fire({\r\n        title: 'Campos vacios',\r\n        text: 'Asegurese de llenar todos los campos',\r\n        icon: 'warning',\r\n      });\r\n    }\r\n    noIguales() {\r\n      Swal.fire({\r\n        title: 'Advertencia',\r\n        text: 'Los valores no tienen la misma longitud',\r\n        icon: 'warning',\r\n      });\r\n    }\r\n  }\r\n  ","<div class=\"container\">\r\n    <h1 class=\"text-center\">Método regresion no lineal</h1>\r\n    <div class=\"container\">\r\n        \r\n        <div class=\"d-flex justify-content-center align-items-center\">\r\n\r\n                <form class=\"col-8 mt-5\" #regresionNoLinealForm=\"ngForm\"\r\n                    (ngSubmit)=\"regresionNoLineal(regresionNoLinealForm)\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col\">\r\n                    <div class=\"mb-3\">\r\n                        <label class=\"form-label\">Valores de 'X' </label>\r\n                        <textarea type=\"text\" class=\"form-control\" placeholder=\"8, 6, 4, 4, 5, 5, 2\" name=\"x\"\r\n                            #x=\"ngModel\" [(ngModel)]=\"regresionNoLinealModel.x\" [ngModelOptions]=\"{ standalone: true }\"\r\n                            style=\"height: 100px\" required>\r\n            </textarea>\r\n                    </div>\r\n                        </div>\r\n                        <div class=\"col\">\r\n                    <div class=\"mb-3\">\r\n                        <label class=\"form-label\">Valores de 'Y'</label>\r\n                        <textarea type=\"text\" class=\"form-control\" placeholder=\"8, 6, 4, 4, 5, 5, 2\" name=\"y\"\r\n                            #y=\"ngModel\" [(ngModel)]=\"regresionNoLinealModel.y\" [ngModelOptions]=\"{ standalone: true }\"\r\n                            style=\"height: 100px\" required>\r\n            </textarea>\r\n                    </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <button type=\"submit\" class=\"btn btn-danger col-6\" [disabled]=\"regresionNoLinealForm.invalid\">\r\n                        Calcular\r\n                    </button>\r\n                \r\n                </form>\r\n            </div>\r\n    </div>\r\n\r\n            <!-- tabla -->\r\n            <div class=\"m-auto text-center \" *ngIf=\"grafico\">\r\n\r\n            <div class=\"container mt-5\" style=\"overflow-y: auto; overflow-x: hidden; max-height: 400px\">\r\n                <div class=\"row\">\r\n                    <div class=\"col\">\r\n                        <table class=\"table\">\r\n                            <thead class=\"bg-info\">\r\n                                <tr>\r\n                                    <th scope=\"col\">X</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody *ngIf=\"xcopy\">\r\n                                <tr *ngFor=\"let result of xcopy\">\r\n                                    <td>{{ result }}</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                    <div class=\"col\">\r\n                        <table class=\"table\">\r\n                            <thead class=\"bg-info\">\r\n                                <tr>\r\n                                    <th scope=\"col\">Y</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody *ngIf=\"ycopy\">\r\n                                <tr *ngFor=\"let result of ycopy\">\r\n                                    <td>{{ result }}</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                    <div class=\"col\">\r\n                        <table class=\"table\">\r\n                            <thead class=\"bg-info\">\r\n                                <tr>\r\n                                    <th scope=\"col\">X^2</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody *ngIf=\"x2\">\r\n                                <tr *ngFor=\"let result of x2\">\r\n                                    <td>{{ result }}</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                    <div class=\"col\">\r\n                        <table class=\"table\">\r\n                            <thead class=\"bg-info\">\r\n                                <tr>\r\n                                    <th scope=\"col\">X^3</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody *ngIf=\"x3\">\r\n                                <tr *ngFor=\"let result of x3\">\r\n                                    <td>{{ result }}</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                    <div class=\"col\">\r\n                        <table class=\"table\">\r\n                            <thead class=\"bg-info\">\r\n                                <tr>\r\n                                    <th scope=\"col\">X^4</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody *ngIf=\"x4\">\r\n                                <tr *ngFor=\"let result of x4\">\r\n                                    <td>{{ result }}</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                    <div class=\"col\">\r\n                        <table class=\"table\">\r\n                            <thead class=\"bg-info\">\r\n                                <tr>\r\n                                    <th scope=\"col\">XY</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody *ngIf=\"xy\">\r\n                                <tr *ngFor=\"let result of xy\">\r\n                                    <td>{{ result }}</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                    <div class=\"col\">\r\n                        <table class=\"table\">\r\n                            <thead class=\"bg-info\">\r\n                                <tr>\r\n                                    <th scope=\"col\">(X^2)Y</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody *ngIf=\"x2y\">\r\n                                <tr *ngFor=\"let result of x2y\">\r\n                                    <td>{{ result }}</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            </div>\r\n            <!-- end tabla -->\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { MontecarloModel } from 'src/app/models';\r\nimport { Service } from 'src/app/services/service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-montecarlo',\r\n  templateUrl: './montecarlo.component.html',\r\n  styleUrls: ['./montecarlo.component.css'],\r\n  providers: [Service]\r\n})\r\nexport class MontecarloComponent implements OnInit {\r\n  public montecarloModel: MontecarloModel\r\n  public lista = []\r\n  public FPA;\r\n  public max;\r\n  public min;\r\n  public muestra;\r\n  public probabilidad;\r\n  public simulacion;\r\n  public ri;\r\n  public grafico = false;\r\n\r\n  constructor(private _service: Service) {\r\n\r\n    this.montecarloModel = new MontecarloModel(null, null, null, null, null, null)\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  montecarlo(form) {\r\n    if (this.montecarloModel.a && this.montecarloModel.c &&\r\n      this.montecarloModel.lista && this.montecarloModel.m &&\r\n      this.montecarloModel.m && this.montecarloModel.n &&\r\n      this.montecarloModel.x0) {\r\n\r\n\r\n      this.montecarloModel.lista.split(',').forEach((elementx) => {\r\n        this.lista.push(+elementx)\r\n\r\n      });\r\n      this.montecarloModel.lista = this.lista;\r\n\r\n\r\n\r\n      this._service.montecarlo(this.montecarloModel).subscribe(\r\n        response => {\r\n\r\n          this.FPA = response.FPA;\r\n          this.max = response.Max;\r\n          this.min = response.Min;\r\n          this.muestra = response.Muestra;\r\n          this.probabilidad = response.Probabilidad;\r\n          this.simulacion = response.Simulacion;\r\n          this.ri = response.ri;\r\n          this.lista = [];\r\n          \r\n          this.grafico = true\r\n          this.limpiar()\r\n        },\r\n        error => {\r\n          console.log(error)\r\n\r\n        }\r\n      )\r\n\r\n    } else {\r\n\r\n      this.camposVacios()\r\n    }\r\n\r\n  }\r\n\r\n  limpiar() {\r\n    this.montecarloModel = new MontecarloModel(null, null, null, null, null, null)\r\n\r\n\r\n  }\r\n\r\n  success() {\r\n    Swal.fire({\r\n      title: 'Correcto',\r\n      icon: 'success',\r\n      timer: 600,\r\n      showConfirmButton: false,\r\n    });\r\n  }\r\n\r\n  camposVacios() {\r\n    Swal.fire({\r\n       title: 'Validacion',\r\n      text: 'No deje campos vacios',\r\n      icon: 'warning',\r\n    });\r\n  }\r\n  \r\n\r\n}\r\n","<div class=\"container\">\r\n    <h1 class=\"text-center\">Método montecarlo</h1>\r\n    <div class=\"container\">\r\n\r\n        <form class=\"col mt-5\" #montecarloForm=\"ngForm\" (ngSubmit)=\"montecarlo(montecarloForm)\">\r\n            <div class=\"row\">\r\n                <div class=\"col\">\r\n                    <div class=\"mb-3\">\r\n                        <label class=\"form-label\">Modulo (m):</label>\r\n                        <input type=\"number\" class=\"form-control\" placeholder=\" 4\" name=\"modulo\" #modulo=\"ngModel\"\r\n                            [(ngModel)]=\"montecarloModel.m\" [ngModelOptions]=\"{ standalone: true }\" required />\r\n                    </div>\r\n                </div>\r\n                <div class=\"col\">\r\n                    <div class=\"mb-3\">\r\n                        <label class=\"form-label\">Semilla (X0):</label>\r\n                        <input type=\"number\" class=\"form-control\" placeholder=\" 2\" name=\"semilla\" #semilla=\"ngModel\"\r\n                            [(ngModel)]=\"montecarloModel.x0\" [ngModelOptions]=\"{ standalone: true }\" required />\r\n                    </div>\r\n                </div>\r\n                <div class=\"col\">\r\n                    <div class=\"mb-3\">\r\n                        <label class=\"form-label\">Multiplicador (a):</label>\r\n                        <input type=\"number\" class=\"form-control\" placeholder=\" 3\" name=\"multiplicador\"\r\n                            #multiplicador=\"ngModel\" [(ngModel)]=\"montecarloModel.a\"\r\n                            [ngModelOptions]=\"{ standalone: true }\" required />\r\n                    </div>\r\n                </div>\r\n                <div class=\"col\">\r\n\r\n                    <div class=\"mb-3\">\r\n                        <label class=\"form-label\">Incremento (c):</label>\r\n                        <input type=\"number\" class=\"form-control\" placeholder=\" 3\" name=\"incremento\"\r\n                            #incremento=\"ngModel\" [(ngModel)]=\"montecarloModel.c\"\r\n                            [ngModelOptions]=\"{ standalone: true }\" required />\r\n                    </div>\r\n                </div>\r\n                <div class=\"col\">\r\n\r\n                    <div class=\"mb-3\">\r\n                        <label class=\"form-label\">Interacciones (n):</label>\r\n                        <input type=\"number\" class=\"form-control\" placeholder=\" 10\" name=\"interacciones\"\r\n                            #interacciones=\"ngModel\" [(ngModel)]=\"montecarloModel.n\"\r\n                            [ngModelOptions]=\"{ standalone: true }\" required />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"mb-3 \">\r\n                <label class=\"form-label\">Valores de la muestra</label>\r\n                <textarea type=\"text\" class=\"form-control col-4\" placeholder=\"10, 20, 12, 32, 11, 14\" name=\"lista\"\r\n                    #lista=\"ngModel\" [(ngModel)]=\"montecarloModel.lista\" [ngModelOptions]=\"{ standalone: true }\"\r\n                    style=\"height: 100px\" required>\r\n              </textarea>\r\n            </div>\r\n            <button type=\"submit\" class=\"btn btn-danger col-3\" [disabled]=\"montecarloForm.invalid\">\r\n                Calcular\r\n            </button>\r\n\r\n        </form>\r\n\r\n    </div>\r\n\r\n    <div class=\"m-auto text-center \" *ngIf=\"grafico\">\r\n\r\n    <!-- tabla -->\r\n    <div class=\"container mt-5\" style=\"overflow-y: auto; overflow-x: hidden; max-height: 400px\">\r\n        <div class=\"row\">\r\n            <div class=\"col\">\r\n                <table class=\"table\">\r\n                    <thead class=\"bg-info\">\r\n                        <tr>\r\n                            <th scope=\"col\">Muestra</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody *ngIf=\"muestra\">\r\n                        <tr *ngFor=\"let result of muestra\">\r\n                            <td>{{ result }}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <div class=\"col\">\r\n                <table class=\"table\">\r\n                    <thead class=\"bg-info\">\r\n                        <tr>\r\n                            <th scope=\"col\">Probabilidad</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody *ngIf=\"probabilidad\">\r\n                        <tr *ngFor=\"let result of probabilidad\">\r\n                            <td>{{ result }}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <div class=\"col\">\r\n                <table class=\"table\">\r\n                    <thead class=\"bg-info\">\r\n                        <tr>\r\n                            <th scope=\"col\">FPA</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody *ngIf=\"FPA\">\r\n                        <tr *ngFor=\"let result of FPA\">\r\n                            <td>{{ result }}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <div class=\"col\">\r\n                <table class=\"table\">\r\n                    <thead class=\"bg-info\">\r\n                        <tr>\r\n                            <th scope=\"col\">Min</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody *ngIf=\"min\">\r\n                        <tr *ngFor=\"let result of min\">\r\n                            <td>{{ result }}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <div class=\"col\">\r\n                <table class=\"table\">\r\n                    <thead class=\"bg-info\">\r\n                        <tr>\r\n                            <th scope=\"col\">Max</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody *ngIf=\"max\">\r\n                        <tr *ngFor=\"let result of max\">\r\n                            <td>{{ result }}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <div class=\"col\">\r\n                <table class=\"table\">\r\n                    <thead class=\"bg-info\">\r\n                        <tr>\r\n                            <th scope=\"col\">ri</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody *ngIf=\"ri\">\r\n                        <tr *ngFor=\"let result of ri\">\r\n                            <td>{{ result }}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <div class=\"col\">\r\n                <table class=\"table\">\r\n                    <thead class=\"bg-info\">\r\n                        <tr>\r\n                            <th scope=\"col\">Simulacion</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody *ngIf=\"simulacion\">\r\n                        <tr *ngFor=\"let result of simulacion\">\r\n                            <td>{{ result }}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n        <!-- end tabla -->\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { global } from 'src/app/services/global';\r\nimport { Service } from 'src/app/services/service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-estadisticos',\r\n  templateUrl: './estadisticos.component.html',\r\n  styleUrls: ['./estadisticos.component.css'],\r\n  providers:[Service]\r\n})\r\nexport class EstadisticosComponent implements OnInit {\r\n  public muestra;\r\n  public lista = [];\r\n\r\n  public grafico = false;\r\n  public mostrar = false\r\n  public url = global.url;\r\n  public x;\r\n  public media;\r\n  public mediana;\r\n  public moda;\r\n\r\n  constructor(private _service: Service) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  \r\n  aggMuestra(){\r\n\r\n    if (this.muestra) {\r\n      \r\n    \r\n \r\n    this.muestra.split(',').forEach((element, i) => {\r\n      this.lista.push(+element)  \r\n      \r\n    });  \r\n\r\n    this._service.estadisticos(this.lista).subscribe(\r\n      response => {\r\n        console.log(response)\r\n        this.x = response.Datos;\r\n        this.media = response.media;\r\n        this.mediana = response.mediana;\r\n        this.moda = response.moda;\r\n        // this.eMM4 = response.eMM04;\r\n        this.lista = []\r\n        \r\n        this.grafico = true;\r\n        this.limpiar()\r\n        this.mostrar = true;\r\n        \r\n      },\r\n      error => {\r\n        console.log(error)\r\n\r\n      }\r\n    )\r\n  } else {\r\n    this.camposVacios()\r\n\r\n\r\n  }\r\n\r\n  }\r\n\r\n  limpiar(){\r\n    this.muestra = '';\r\n\r\n  }\r\n  generarGrafico(){\r\n    this.mostrar = true\r\n    // let datos = {'x': this.x, 'm3': this.MMO3, 'm4': this.MMO4}\r\n    // this._service.graficoPM(datos).subscribe(\r\n    //   response => { \r\n    //   },\r\n    //   error => {\r\n    //     console.log(error)\r\n\r\n    //   }\r\n    // ) \r\n\r\n  }\r\n\r\n  success() {\r\n    Swal.fire({\r\n      title: 'Correcto',\r\n      icon: 'success',\r\n      timer: 600,\r\n      showConfirmButton: false\r\n    })\r\n  }\r\n  \r\n  camposVacios() {\r\n    Swal.fire({\r\n       title: 'Validacion',\r\n      text: 'No deje campos vacios',\r\n      icon: 'warning',\r\n    })\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"container\">\r\n    <h1 class=\"text-center letras\">Media Mediana y Moda</h1>\r\n    <div class=\"container\">\r\n        <div class=\"row\">\r\n        <div class=\"col-6\">\r\n\r\n            <form class=\"mt-5 \">\r\n                <div class=\"mb-3\">\r\n                    <label class=\"form-label\">Agregue los datos a calcular separados por coma (,)</label>\r\n                    <textarea type=\"text\" class=\"form-control\" placeholder=\"Ejemplo: 21, 54, 32, 65, 12, 45, 21, 54, 32\"\r\n                        [(ngModel)]=\"muestra\" [ngModelOptions]=\"{ standalone: true }\" style=\"height: 120px;\"\r\n                        required></textarea>\r\n                </div>\r\n                <button type=\"submit\" class=\"btn btn-success col-12\" (click)=\"aggMuestra()\">\r\n                    Calcular\r\n                </button>\r\n                <!-- <button type=\"button\" class=\"btn btn-info col-12 mt-2\" (click)=\"generarGrafico()\" *ngIf=\"grafico\">\r\n                    Generar gráfico\r\n                  </button> -->\r\n                \r\n            </form>\r\n\r\n        </div>\r\n        <!-- generar muestra inputs dinamicos para muestra -->\r\n\r\n        <div class=\"col-6\">\r\n\r\n            <img *ngIf=\"mostrar\" src=\"{{url+'grafico/'+x}}\" width=\"600px\" />\r\n\r\n          \r\n        </div>\r\n\r\n\r\n    </div>\r\n\r\n        <div class=\"col m-auto text-center \" *ngIf=\"grafico\" >\r\n\r\n        <div class=\"container mt-5\" style=\"overflow-y: auto; overflow-x: hidden; max-height: 400px\">\r\n            <div class=\"row\">\r\n                <div class=\"col\">\r\n                    <table class=\"table\">\r\n                        <thead class=\"bg-success\">\r\n                            <tr>\r\n                                <th scope=\"col\">Valores</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody *ngIf=\"x\">\r\n                            <tr *ngFor=\"let result of x\">\r\n                                <td>{{ result }}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <div class=\"col\">\r\n                    <table class=\"table\">\r\n                        <thead class=\"bg-success\">\r\n                            <tr>\r\n                                <th scope=\"col\">Media calculada</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody  *ngIf=\"media\">\r\n                            <tr >\r\n                                <td>{{media}}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <div class=\"col\">\r\n                    <table class=\"table\">\r\n                        <thead class=\"bg-success\">\r\n                            <tr>\r\n                                <th scope=\"col\">Mediana calculada</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody  *ngIf=\"mediana\">\r\n                            <tr >\r\n                                <td>{{ mediana }}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <div class=\"col\">\r\n                    <table class=\"table\">\r\n                        <thead class=\"bg-success\">\r\n                            <tr>\r\n                                <th scope=\"col\">Moda calculada</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody *ngIf=\"moda\">\r\n                            <tr>\r\n                                <td>{{ moda }}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n               \r\n            </div>\r\n        </div> \r\n\r\n         </div>\r\n    </div>\r\n</div>\r\n<br><br>\r\n\r\n  \r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { routing, appRoutingProviders  } from './app.routing';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { CuadradoMedioComponent } from './components/cuadrado-medio/cuadrado-medio.component';\r\nimport { CongruencialAditivoComponent } from './components/congruencial-aditivo/congruencial-aditivo.component';\r\nimport { CongruencialMultiplicativoComponent } from './components/congruencial-multiplicativo/congruencial-multiplicativo.component';\r\nimport { PromedioMovilComponent } from './components/promedio-movil/promedio-movil.component';\r\nimport { AlisamientoExponencialComponent } from './components/alisamiento-exponencial/alisamiento-exponencial.component';\r\nimport { RegresionLinealComponent } from './components/regresion-lineal/regresion-lineal.component';\r\nimport { RegresionNoLinealComponent } from './components/regresion-no-lineal/regresion-no-lineal.component';\r\nimport { MontecarloComponent } from './components/montecarlo/montecarlo.component';\r\nimport { InversaAditivoComponent } from './components/inversa-aditivo/inversa-aditivo.component';\r\nimport { InversaMultiplicativoComponent } from './components/inversa-multiplicativo/inversa-multiplicativo.component';\r\nimport { LineaEsperaComponent } from './components/linea-espera/linea-espera.component';\r\nimport { ModeloInventarioComponent } from './components/modelo-inventario/modelo-inventario.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { LineaEsperaNuevoComponent } from './components/linea-espera-nuevo/linea-espera-nuevo.component';\r\nimport { EstadisticosComponent } from './components/estadisticos/estadisticos.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    CuadradoMedioComponent,\r\n    CongruencialAditivoComponent,\r\n    CongruencialMultiplicativoComponent,\r\n    PromedioMovilComponent,\r\n    AlisamientoExponencialComponent,\r\n    RegresionLinealComponent,\r\n    RegresionNoLinealComponent,\r\n    MontecarloComponent,\r\n    InversaAditivoComponent,\r\n    InversaMultiplicativoComponent,\r\n    LineaEsperaComponent,\r\n    ModeloInventarioComponent,\r\n    HomeComponent,\r\n    LineaEsperaNuevoComponent,\r\n    EstadisticosComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    routing,\r\n    FormsModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [appRoutingProviders],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { RegresionLinealModel } from 'src/app/models';\r\nimport { Service } from 'src/app/services/service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-regresion-lineal',\r\n  templateUrl: './regresion-lineal.component.html',\r\n  styleUrls: ['./regresion-lineal.component.css'],\r\n  providers: [Service],\r\n})\r\nexport class RegresionLinealComponent implements OnInit {\r\n  public regresionLinealModel: RegresionLinealModel;\r\n  public listaX = [];\r\n  public listaY = [];\r\n  public xcopy;\r\n  public xy;\r\n  public x2;\r\n  public ycopy;\r\n  public y2;\r\n  public result;\r\n  public grafico = false;\r\n\r\n  constructor(private _service: Service) {\r\n    this.regresionLinealModel = new RegresionLinealModel(null, null);\r\n  }\r\n\r\n  ngOnInit(): void { }\r\n\r\n  regresionLineal(form) {\r\n\r\n    if (this.regresionLinealModel.x && this.regresionLinealModel.y) {\r\n\r\n      \r\n      this.regresionLinealModel.x.split(',').forEach((elementx) => {\r\n        this.listaX.push(+elementx);\r\n      });\r\n\r\n      this.regresionLinealModel.y.split(',').forEach((elementy) => {\r\n        this.listaY.push(+elementy);\r\n      });\r\n\r\n      // longitud igual de x, y\r\n      if (this.listaX.length === this.listaY.length) {\r\n        this.regresionLinealModel.x = this.listaX;\r\n        this.regresionLinealModel.y = this.listaY;\r\n  \r\n        this._service.regresionLineal(this.regresionLinealModel).subscribe(\r\n          (response) => {\r\n            this.xcopy = response.X;\r\n            this.xy = response.XY;\r\n            this.x2 = response.X2;\r\n            this.ycopy = response.Y;\r\n            this.y2 = response.Y2;\r\n            this.result = response.Result;\r\n            this.regresionLinealModel.x = null;\r\n            this.regresionLinealModel.y = null;\r\n            \r\n            this.grafico = true;\r\n            this.limpiar()\r\n\r\n          },\r\n          (error) => {\r\n            console.log(error);\r\n            this.listaX = [];\r\n            this.listaY = [];\r\n\r\n          }\r\n        );\r\n      } else {\r\n        this.listaX = [];\r\n        this.listaY = [];\r\n        this.noIguales();\r\n      }\r\n    } else {\r\n      this.camposVacios();\r\n\r\n    }\r\n  }\r\n\r\n  limpiar() {\r\n    this.regresionLinealModel = new RegresionLinealModel(null, null);\r\n  }\r\n\r\n  success() {\r\n    Swal.fire({\r\n      title: 'Correcto',\r\n      icon: 'success',\r\n      timer: 600,\r\n      showConfirmButton: false,\r\n    });\r\n  }\r\n\r\n  camposVacios() {\r\n    Swal.fire({\r\n       title: 'Validacion',\r\n      text: 'No deje campos vacios',\r\n      icon: 'warning',\r\n    });\r\n  }\r\n  noIguales() {\r\n    Swal.fire({\r\n      title: 'Advertencia',\r\n      text: 'Los valores no tienen la misma longitud',\r\n      icon: 'warning',\r\n    });\r\n  }\r\n}\r\n","<div class=\"container\">\r\n    <h1 class=\"text-center\">Método regresion lineal</h1>\r\n    <div class=\"container\">\r\n        <div class=\"d-flex justify-content-center align-items-center\">\r\n\r\n        <form class=\"col-8 mt-5\" #regresionLinealForm=\"ngForm\" (ngSubmit)=\"regresionLineal(regresionLinealForm)\">\r\n            <div class=\"row\">\r\n                <div class=\"col\">\r\n                    <div class=\"mb-3\">\r\n                        <label class=\"form-label\">Valores de 'X' </label>\r\n                        <textarea type=\"text\" class=\"form-control\" placeholder=\"8, 6, 4, 4, 5, 5, 2\" name=\"x\"\r\n                            #x=\"ngModel\" [(ngModel)]=\"regresionLinealModel.x\" [ngModelOptions]=\"{ standalone: true }\"\r\n                            style=\"height: 100px\" required>\r\n                        </textarea>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col\">\r\n                    <div class=\"mb-3\">\r\n                        <label class=\"form-label\">Valores de 'Y'</label>\r\n                        <textarea type=\"text\" class=\"form-control\" placeholder=\"8, 6, 4, 4, 5, 5, 2\" name=\"y\"\r\n                            #y=\"ngModel\" [(ngModel)]=\"regresionLinealModel.y\" [ngModelOptions]=\"{ standalone: true }\"\r\n                            style=\"height: 100px\" required>\r\n                        </textarea>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <button type=\"submit\" class=\"btn btn-danger col-6\" [disabled]=\"regresionLinealForm.invalid\">\r\n                Calcular\r\n            </button>\r\n         \r\n        </form>\r\n        </div>\r\n        \r\n\r\n\r\n\r\n        <!-- tabla -->\r\n        <div class=\"m-auto text-center \" *ngIf=\"grafico\">\r\n\r\n        <div class=\"container mt-5\" style=\"overflow-y: auto; overflow-x: hidden; max-height: 400px\">\r\n            <div class=\"row\">\r\n                <div class=\"col\">\r\n                    <table class=\"table\">\r\n                        <thead class=\"bg-info\">\r\n                            <tr>\r\n                                <th scope=\"col\">X</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody *ngIf=\"xcopy\">\r\n                            <tr *ngFor=\"let result of xcopy\">\r\n                                <td>{{ result }}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <div class=\"col\">\r\n                    <table class=\"table\">\r\n                        <thead class=\"bg-info\">\r\n                            <tr>\r\n                                <th scope=\"col\">Y</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody *ngIf=\"ycopy\">\r\n                            <tr *ngFor=\"let result of ycopy\">\r\n                                <td>{{ result }}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <div class=\"col\">\r\n                    <table class=\"table\">\r\n                        <thead class=\"bg-info\">\r\n                            <tr>\r\n                                <th scope=\"col\">X^2</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody *ngIf=\"x2\">\r\n                            <tr *ngFor=\"let result of x2\">\r\n                                <td>{{ result }}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <div class=\"col\">\r\n                    <table class=\"table\">\r\n                        <thead class=\"bg-info\">\r\n                            <tr>\r\n                                <th scope=\"col\">XY</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody *ngIf=\"xy\">\r\n                            <tr *ngFor=\"let result of xy\">\r\n                                <td>{{ result }}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <div class=\"col\">\r\n                    <table class=\"table\">\r\n                        <thead class=\"bg-info\">\r\n                            <tr>\r\n                                <th scope=\"col\">Y^2</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody *ngIf=\"y2\">\r\n                            <tr *ngFor=\"let result of y2\">\r\n                                <td>{{ result }}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <!-- end tabla -->\r\n    </div>\r\n</div>\r\n</div>","// imports necesarios\r\nimport { ModuleWithProviders } from '@angular/core';\r\nimport { Routes, RouterModule} from '@angular/router';\r\nimport { AlisamientoExponencialComponent } from './components/alisamiento-exponencial/alisamiento-exponencial.component';\r\nimport { CongruencialAditivoComponent } from './components/congruencial-aditivo/congruencial-aditivo.component';\r\nimport { CongruencialMultiplicativoComponent } from './components/congruencial-multiplicativo/congruencial-multiplicativo.component';\r\n\r\n\r\n// importar componentes\r\nimport { CuadradoMedioComponent } from './components/cuadrado-medio/cuadrado-medio.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { InversaAditivoComponent } from './components/inversa-aditivo/inversa-aditivo.component';\r\nimport { InversaMultiplicativoComponent } from './components/inversa-multiplicativo/inversa-multiplicativo.component';\r\nimport { LineaEsperaComponent } from './components/linea-espera/linea-espera.component';\r\nimport { ModeloInventarioComponent } from './components/modelo-inventario/modelo-inventario.component';\r\nimport { MontecarloComponent } from './components/montecarlo/montecarlo.component';\r\nimport { PromedioMovilComponent } from './components/promedio-movil/promedio-movil.component';\r\nimport { RegresionLinealComponent } from './components/regresion-lineal/regresion-lineal.component';\r\nimport { RegresionNoLinealComponent } from './components/regresion-no-lineal/regresion-no-lineal.component';\r\nimport { LineaEsperaNuevoComponent } from './components/linea-espera-nuevo/linea-espera-nuevo.component';\r\nimport { EstadisticosComponent } from './components/estadisticos/estadisticos.component';\r\n\r\n\r\n\r\n\r\n\r\n\r\n// definir las rutas\r\nconst appRoutes: Routes = [      \r\n\r\n       {path: '', component: EstadisticosComponent},\r\n      {path: 'cuadrado-medio', component: CuadradoMedioComponent},\r\n      {path: 'congruencial-lineal', component: CongruencialAditivoComponent},\r\n      {path: 'congruencial-multiplicativo', component: CongruencialMultiplicativoComponent},\r\n      {path: 'promedio-movil', component: PromedioMovilComponent},\r\n      {path: 'asilamiento-exponencial', component: AlisamientoExponencialComponent},\r\n      {path: 'regresion-lineal', component: RegresionLinealComponent},\r\n      {path: 'regresion-no-lineal', component: RegresionNoLinealComponent},\r\n      {path: 'montecarlo', component: MontecarloComponent},\r\n      {path: 'inversa-aditiva', component: InversaAditivoComponent},\r\n      {path: 'inversa-multiplicativa', component: InversaMultiplicativoComponent},\r\n      {path: 'linea-espera', component: LineaEsperaComponent},\r\n      {path: 'inventario', component: ModeloInventarioComponent},\r\n      {path: 'linea-espera-nuevo', component: LineaEsperaNuevoComponent},\r\n      {path: 'estadisticos', component: EstadisticosComponent},\r\n\r\n\r\n    //   {path: '**', component: HomeComponent},\r\n\r\n\r\n];\r\n\r\n// exportar configuracion\r\nexport const appRoutingProviders: any[] = [];\r\nexport const routing: ModuleWithProviders<any> = RouterModule.forRoot(appRoutes);\r\n\r\n\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { CuadradoMedioModel } from 'src/app/models';\r\nimport { Service } from '../../services/service';\r\nimport Swal from 'sweetalert2'\r\nimport { global } from 'src/app/services/global';\r\n@Component({\r\n  selector: 'app-cuadrado-medio',\r\n  templateUrl: './cuadrado-medio.component.html',\r\n  styleUrls: ['./cuadrado-medio.component.css'],\r\n  providers:[Service]\r\n})\r\nexport class CuadradoMedioComponent implements OnInit {\r\n\r\n  public cuadradoMedioModel: CuadradoMedioModel;\r\n  public x2;\r\n  public xi;\r\n  public ri;\r\n\r\n  public grafico;\r\n  public mostrar = false;\r\n  public url = global.url;\r\n\r\n  constructor(private _service: Service) {\r\n    this.cuadradoMedioModel = new CuadradoMedioModel(null,null);\r\n    this.grafico = false;\r\n    \r\n   }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n\r\n  cuadradoMedio(form) {\r\n   \r\n    if (this.cuadradoMedioModel.n && this.cuadradoMedioModel.r) {\r\n      \r\n   \r\n    this._service.cuadradoMedio(this.cuadradoMedioModel).subscribe(\r\n      response => {\r\n        this.x2 = response.X2;\r\n        this.xi = response.Xi;\r\n        this.ri = response.ri;\r\n        this.grafico = true;\r\n\r\n      },\r\n      error => {\r\n        console.log(error)\r\n\r\n      }\r\n    )\r\n  }else{\r\n    this.camposVacios();\r\n  }\r\n\r\n  }\r\n\r\n  limpiar(){\r\n    this.cuadradoMedioModel = new CuadradoMedioModel(null, null);\r\n    this.grafico = false;\r\n  \r\n  }\r\n\r\n  generarGrafico(){\r\n    this.mostrar = true\r\n    // this._service.grafico(this.ri).subscribe(\r\n    //   response => { \r\n    //     this.limpiar()\r\n    //   },\r\n    //   error => {\r\n    //     console.log(error)\r\n\r\n    //   }\r\n    // ) \r\n\r\n  }\r\n\r\n\r\n  success() {\r\n    Swal.fire({\r\n      title: 'Correcto',\r\n      icon: 'success',\r\n      timer: 600,\r\n      showConfirmButton: false\r\n    })\r\n  }\r\n\r\n  camposVacios(){\r\n    Swal.fire({\r\n       title: 'Validacion',\r\n      text: 'No deje campos vacios',\r\n      icon: 'warning',\r\n    })\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n  <h1 class=\"text-center\">Método cuadrado medio</h1>\r\n  <div class=\"container\">\r\n    <div class=\"\">\r\n      <div class=\"d-flex justify-content-center align-items-center\">\r\n\r\n        <form class=\"col-6 mt-5\" #cuadradoMedioForm=\"ngForm\" (ngSubmit)=\"cuadradoMedio(cuadradoMedioForm)\">\r\n          <div class=\"row\">\r\n            <div class=\"col\">\r\n              <div class=\"mb-3\">\r\n                <label class=\"form-label\">Ingrese valor semilla:</label>\r\n                <input type=\"number\" class=\"form-control\" placeholder=\" 2\" name=\"semilla\" #semilla=\"ngModel\"\r\n                  [(ngModel)]=\"cuadradoMedioModel.r\" [ngModelOptions]=\"{ standalone: true }\" required />\r\n              </div>\r\n            </div>\r\n            <div class=\"col\">\r\n              <div class=\"mb-3\">\r\n                <label class=\"form-label\">Ingrese numero de interacciones</label>\r\n                <input type=\"number\" class=\"form-control\" placeholder=\" 10\" #interacciones=\"ngModel\"\r\n                  [(ngModel)]=\"cuadradoMedioModel.n\" [ngModelOptions]=\"{ standalone: true }\" required />\r\n              </div>\r\n            </div>\r\n             \r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col\">\r\n              <button type=\"submit\" class=\"btn btn-danger col-12\" [disabled]=\"cuadradoMedioForm.invalid\">\r\n                Calcular\r\n              </button>\r\n            </div>\r\n            <div class=\"col\">\r\n            \r\n\r\n              <button type=\"button\" class=\"btn btn-info col-12\" (click)=\"generarGrafico()\" *ngIf=\"grafico\">\r\n                Generar gráfico\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n        </form>\r\n      </div>\r\n      </div>\r\n\r\n      <div class=\"col-8 m-auto text-center \" *ngIf=\"grafico\" >\r\n        <div class=\"container mt-5 \" style=\"overflow-y: auto; overflow-x: hidden; max-height: 400px;\">\r\n          <div class=\"row\">\r\n            <div class=\"col\">\r\n              <table class=\"table\">\r\n                <thead class=\"bg-info\">\r\n                  <tr>\r\n                    <th scope=\"col\">X2</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody *ngIf=\"x2\">\r\n                  <tr *ngFor=\"let result of x2\">\r\n                    <td>{{ result }}</td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            <div class=\"col\">\r\n              <table class=\"table\">\r\n                <thead class=\"bg-info\">\r\n                  <tr>\r\n                    <th scope=\"col\">Xi</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody *ngIf=\"xi\">\r\n                  <tr *ngFor=\"let result of xi\">\r\n                    <td>{{ result }}</td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            <div class=\"col\">\r\n              <table class=\"table\">\r\n                <thead class=\"bg-info\">\r\n                  <tr>\r\n                    <th scope=\"col\">ri</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody *ngIf=\"ri\">\r\n                  <tr *ngFor=\"let result of ri\">\r\n                    <td>{{ result }}</td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n</div>\r\n<br><br>\r\n\r\n<div class=\"d-flex justify-content-center align-items-center\">\r\n\r\n  <img *ngIf=\"mostrar\" src=\"{{url+'grafico/'+ri}}\" width=\"600px\" />\r\n\r\n</div>","export var global = {\r\n \r\n    // url: 'http://localhost:8000/api/',\r\n        url: 'https://backend-simulacion.herokuapp.com/api/',\r\n\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { InversoAditivoModel } from 'src/app/models';\r\nimport { global } from 'src/app/services/global';\r\nimport { Service } from 'src/app/services/service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-inversa-aditivo',\r\n  templateUrl: './inversa-aditivo.component.html',\r\n  styleUrls: ['./inversa-aditivo.component.css'],\r\n  providers: [Service]\r\n})\r\nexport class InversaAditivoComponent implements OnInit {\r\n  public inversoAditivoModel: InversoAditivoModel\r\n  public xn;\r\n  public ri;\r\n  public inversa;\r\n  public grafico;\r\n  public mostrar = false\r\n  public url = global.url;\r\n  constructor(private _service: Service) {\r\n    this.inversoAditivoModel = new InversoAditivoModel(null, null, null, null, null, null)\r\n    this.grafico = false;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  inversaAditivo(form) {\r\n\r\n    if (this.inversoAditivoModel.a && this.inversoAditivoModel.c &&\r\n      this.inversoAditivoModel.landa && this.inversoAditivoModel.m &&\r\n      this.inversoAditivoModel.n && this.inversoAditivoModel.x0) {\r\n\r\n\r\n      this._service.inversaAditivo(this.inversoAditivoModel).subscribe(\r\n        response => {\r\n          this.xn = response.Xn;\r\n          this.ri = response.ri;\r\n          this.inversa = response.inversa;\r\n          \r\n          this.grafico = true\r\n          this.limpiar()\r\n\r\n        },\r\n        error => {\r\n          console.log(error)\r\n\r\n        }\r\n      )\r\n    } else {\r\n      this.camposVacios()\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n  limpiar() {\r\n    this.inversoAditivoModel = new InversoAditivoModel(null, null, null, null, null, null)\r\n    // this.grafico = false\r\n\r\n  }\r\n  generarGrafico(){\r\n    this.mostrar =true\r\n\r\n    // this._service.grafico(this.ri).subscribe(\r\n    //   response => { \r\n    //   },\r\n    //   error => {\r\n    //     console.log(error)\r\n\r\n    //   }\r\n    // ) \r\n\r\n  }\r\n\r\n  success() {\r\n    Swal.fire({\r\n      title: 'Correcto',\r\n      icon: 'success',\r\n      timer: 600,\r\n      showConfirmButton: false,\r\n    });\r\n  }\r\n\r\n  camposVacios() {\r\n    Swal.fire({\r\n       title: 'Validacion',\r\n      text: 'No deje campos vacios',\r\n      icon: 'warning',\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n  <h1 class=\"text-center\">Transformada inversa aditivo</h1>\r\n  <div class=\"container\">\r\n    <div class=\"d-flex justify-content-center align-items-center\">\r\n\r\n    <form class=\"col-8 mt-5\" #inversoAditivoForm=\"ngForm\" (ngSubmit)=\"inversaAditivo(inversoAditivoForm)\">\r\n      <div class=\"row\">\r\n        <div class=\"col\">\r\n          <div class=\"mb-3\">\r\n            <label class=\"form-label\">Modulo (m):</label>\r\n            <input type=\"number\" class=\"form-control\" placeholder=\" 4\" name=\"modulo\" #modulo=\"ngModel\"\r\n              [(ngModel)]=\"inversoAditivoModel.m\" [ngModelOptions]=\"{ standalone: true }\" required />\r\n          </div>\r\n        </div>\r\n        <div class=\"col\">\r\n          <div class=\"mb-3\">\r\n            <label class=\"form-label\">Semilla (X0):</label>\r\n            <input type=\"number\" class=\"form-control\" placeholder=\" 2\" name=\"semilla\" #semilla=\"ngModel\"\r\n              [(ngModel)]=\"inversoAditivoModel.x0\" [ngModelOptions]=\"{ standalone: true }\" required />\r\n          </div>\r\n        </div>\r\n        <div class=\"col\">\r\n          <div class=\"mb-3\">\r\n            <label class=\"form-label\">Multiplicador (a):</label>\r\n            <input type=\"number\" class=\"form-control\" placeholder=\" 3\" name=\"multiplicador\" #multiplicador=\"ngModel\"\r\n              [(ngModel)]=\"inversoAditivoModel.a\" [ngModelOptions]=\"{ standalone: true }\" required />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col\">\r\n          <div class=\"mb-3\">\r\n            <label class=\"form-label\">Incremento (c):</label>\r\n            <input type=\"number\" class=\"form-control\" placeholder=\" 1\" name=\"incremento\" #incremento=\"ngModel\"\r\n              [(ngModel)]=\"inversoAditivoModel.c\" [ngModelOptions]=\"{ standalone: true }\" required />\r\n          </div>\r\n        </div>\r\n        <div class=\"col\">\r\n          <div class=\"mb-3\">\r\n            <label class=\"form-label\">Interacciones (n):</label>\r\n            <input type=\"number\" class=\"form-control\" placeholder=\" 10\" name=\"interacciones\" #interacciones=\"ngModel\"\r\n              [(ngModel)]=\"inversoAditivoModel.n\" [ngModelOptions]=\"{ standalone: true }\" required />\r\n          </div>\r\n        </div>\r\n        <div class=\"col\">\r\n          <div class=\"mb-3\">\r\n            <label class=\"form-label\">Landa (λ):</label>\r\n            <input type=\"number\" class=\"form-control\" placeholder=\" 10\" name=\"landa\" #landa=\"ngModel\"\r\n              [(ngModel)]=\"inversoAditivoModel.landa\" [ngModelOptions]=\"{ standalone: true }\" required />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n        \r\n        <button type=\"submit\" class=\"btn btn-danger col-12\" [disabled]=\"inversoAditivoForm.invalid\">\r\n          Calcular\r\n        </button>\r\n        <button type=\"button\" class=\"btn btn-info  col-12 mt-2\" (click)=\"generarGrafico()\" *ngIf=\"grafico\">\r\n          Generar gráfico\r\n        </button>\r\n\r\n    </form>\r\n  </div>\r\n  </div>\r\n  \r\n  <div class=\"m-auto text-center \" *ngIf=\"grafico\">\r\n    <div class=\"container mt-5\" style=\"overflow-y: auto; overflow-x: hidden; max-height: 400px;\">\r\n      <div class=\"row\">\r\n        <div class=\"col\">\r\n          <table class=\"table\">\r\n            <thead class=\"bg-info\">\r\n              <tr>\r\n                <th scope=\"col\">XN</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody *ngIf=\"xn\">\r\n              <tr *ngFor=\"let result of xn\">\r\n                <td>{{ result }}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <div class=\"col\">\r\n          <table class=\"table\">\r\n            <thead class=\"bg-info\">\r\n              <tr>\r\n                <th scope=\"col\">ri</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody *ngIf=\"ri\">\r\n              <tr *ngFor=\"let result of ri\">\r\n                <td>{{ result }}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <div class=\"col\">\r\n          <table class=\"table\">\r\n            <thead class=\"bg-info\">\r\n              <tr>\r\n                <th scope=\"col\">Inversa</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody *ngIf=\"inversa\">\r\n              <tr *ngFor=\"let result of inversa\">\r\n                <td>{{ result }}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n      </div>\r\n    </div>\r\n</div>\r\n</div>\r\n</div>\r\n\r\n<br><br>\r\n\r\n<div class=\"d-flex justify-content-center align-items-center\">\r\n\r\n  <img *ngIf=\"mostrar\" src=\"{{url+'grafico/'+ri}}\" width=\"600px\" />\r\n\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { LineaEsperaNuevoModel } from 'src/app/models';\r\nimport { Service } from 'src/app/services/service';\r\nimport { global } from 'src/app/services/global';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-linea-espera-nuevo',\r\n  templateUrl: './linea-espera-nuevo.component.html',\r\n  styleUrls: ['./linea-espera-nuevo.component.css'],\r\n  providers: [Service]\r\n})\r\nexport class LineaEsperaNuevoComponent implements OnInit {\r\n  public lineaEsperaNuevo:  LineaEsperaNuevoModel\r\n  public ALL;\r\n  public TILL;\r\n  public TISE;\r\n  public TIRLL;\r\n  public TIISE;\r\n  public TIFSE;\r\n  public TIESP;\r\n  public TIESA;\r\n  public numClientes;\r\n  public grafico = false;\r\n  public mostrar = false\r\n  public url = global.url\r\n  public x = [];\r\n  public y = [];\r\n\r\n  public suma1\r\n  public suma2\r\n  public promedio1\r\n  public promedio2\r\n\r\n  constructor(private _service: Service,) {\r\n\r\n\r\nthis.lineaEsperaNuevo = new LineaEsperaNuevoModel(null, null, null, null, null)\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  calcular() {\r\n\r\n    // console.log(this.lineaEsperaNuevo)\r\n\r\n    if (this.lineaEsperaNuevo.landa && this.lineaEsperaNuevo.nu )\r\n     {\r\n\r\n       this.lineaEsperaNuevo.x.split(',').forEach((element, i) => {\r\n         this.x.push(+element)  \r\n         \r\n       }); \r\n\r\n       this.lineaEsperaNuevo.y.split(',').forEach((element, i) => {\r\n        this.y.push(+element)  \r\n        \r\n      }); \r\n       \r\n      if (this.x.length === this.y.length) {\r\n\r\n       let datos = {x: this.x, y:this.y, landa: this.lineaEsperaNuevo.landa, nu:this.lineaEsperaNuevo.nu}\r\n\r\n    this._service.lineaEsperaNuevo(datos).subscribe(\r\n      response => {\r\n\r\n        // console.log(response)\r\n        this.ALL = response.ALL\r\n        this.TILL = response.TILL\r\n        this.TISE = response.TISE\r\n        this.TIRLL = response.TIRLL\r\n        this.TIISE = response.TIISE\r\n        this.TIFSE = response.TIFSE\r\n        this.TIESP = response.TIESP\r\n        this.TIESA = response.TIESA\r\n        this.numClientes = response.numClientes\r\n        this.suma1 = response.suma1\r\n        this.suma2 = response.suma2\r\n        this.promedio1 = response.promedio1\r\n        this.promedio2 = response.promedio2\r\n      \r\n        this.success()\r\n        this.limpiar()\r\n        this.grafico = true;\r\n \r\n       \r\n      },\r\n      error => {\r\n        console.log(error)\r\n\r\n      }\r\n    )\r\n     }else {\r\n       this.noIguales()\r\n       window.location.href=\"/linea-espera-nuevo\"\r\n\r\n      }\r\n    }else{\r\n      \r\n      this.camposVacios()\r\n\r\n\r\n    }\r\n\r\n\r\n  }\r\n \r\n\r\n \r\n\r\n  limpiar(){\r\n    this.lineaEsperaNuevo = new LineaEsperaNuevoModel (null, null, null, null, null)\r\n\r\n  }\r\n  generarGrafico(){\r\n    this.mostrar = true\r\n  }\r\n\r\n  success() {\r\n    Swal.fire({\r\n      title: 'Correcto',\r\n      icon: 'success',\r\n      timer: 600,\r\n      showConfirmButton: false,\r\n    });\r\n  }\r\n\r\n  camposVacios() {\r\n    Swal.fire({\r\n       title: 'Validacion',\r\n      text: 'No deje campos vacios',\r\n      icon: 'warning',\r\n    });\r\n  }\r\n  \r\n  noIguales() {\r\n    Swal.fire({\r\n      title: 'Advertencia',\r\n      text: 'Los valores no tienen la misma longitud',\r\n      icon: 'warning',\r\n    });\r\n  }\r\n\r\n}","<div class=\"container\">\r\n    <h1 class=\"text-center\">Simulación linea de espera</h1>\r\n    <div class=\"container\">\r\n        <!-- generar muestra inputs dinamicos para muestra -->\r\n        <form class=\"col mt-5 \">\r\n\r\n\r\n            <div class=\"row\">\r\n                <div class=\"col\">\r\n                    <div class=\"mb-3\">\r\n                        <label class=\"form-label\">Tiempo llegada </label>\r\n                        <textarea type=\"text\" class=\"form-control\" placeholder=\"8, 6, 4, 4, 5, 5, 2\" name=\"x\"\r\n                            #x=\"ngModel\" [(ngModel)]=\"lineaEsperaNuevo.x\" [ngModelOptions]=\"{ standalone: true }\"\r\n                            style=\"height: 100px\" required>\r\n                        </textarea>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col\">\r\n                    <div class=\"mb-3\">\r\n                        <label class=\"form-label\">Tiempo de servicio</label>\r\n                        <textarea type=\"text\" class=\"form-control\" placeholder=\"8, 6, 4, 4, 5, 5, 2\" name=\"y\"\r\n                            #y=\"ngModel\" [(ngModel)]=\"lineaEsperaNuevo.y\" [ngModelOptions]=\"{ standalone: true }\"\r\n                            style=\"height: 100px\" required>\r\n                        </textarea>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n            <div class=\"row\">\r\n                <div class=\"col\">\r\n                    <div class=\"mb-3\">\r\n                        <label class=\"form-label\">Ingrese el valor de landa (λ)):</label>\r\n                        <input type=\"number\" class=\"form-control\" placeholder=\" 1\" name=\"landa\" #landa=\"ngModel\"\r\n                            [(ngModel)]=\"lineaEsperaNuevo.landa\" [ngModelOptions]=\"{ standalone: true }\" required />\r\n                    </div>\r\n\r\n                   \r\n                </div>\r\n                <div class=\"col\">\r\n                   \r\n                    <div class=\"mb-3\">\r\n                        <label class=\"form-label\">Ingrese el valor de Mui:</label>\r\n                        <input type=\"number\" class=\"form-control\" placeholder=\" 10\" name=\"nu\" #nu=\"ngModel\"\r\n                            [(ngModel)]=\"lineaEsperaNuevo.nu\" [ngModelOptions]=\"{ standalone: true }\" required />\r\n                    </div>\r\n                </div>\r\n                <!-- <div class=\"col\">\r\n                    <div class=\"mb-3\">\r\n                        <label class=\"form-label\">Ingrese el numero de clientes:</label>\r\n                        <input type=\"number\" class=\"form-control\" placeholder=\" 10\" name=\"clientes\"\r\n                            #clientes=\"ngModel\" [(ngModel)]=\"lineaEsperaNuevo.clientes\"\r\n                            [ngModelOptions]=\"{ standalone: true }\" required />\r\n                    </div>\r\n                </div> -->\r\n            </div>\r\n                <button type=\"submit\" class=\"btn btn-danger col-3\" (click)=\"calcular()\">\r\n                    Calcular\r\n                </button>\r\n                <button type=\"button\" class=\"btn btn-info  col-3 ml-2\" (click)=\"generarGrafico()\" *ngIf=\"grafico\">\r\n                    Generar gráfico\r\n                  </button>\r\n\r\n        </form>\r\n    <div class=\"m-auto text-center \" *ngIf=\"grafico\">\r\n\r\n    <div class=\"container mt-5\" style=\"overflow-y: auto; overflow-x: hidden; max-height: 400px\">\r\n        <div class=\"row\">\r\n            <div class=\"col\">\r\n                <table class=\"table\">\r\n                    <thead class=\"bg-info\">\r\n                        <tr>\r\n                            <th scope=\"col\">ALL</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody *ngIf=\"ALL\">\r\n                        <tr *ngFor=\"let result of ALL\">\r\n                            <td>{{ result }}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <div class=\"col\">\r\n                <table class=\"table\">\r\n                    <thead class=\"bg-info\">\r\n                        <tr>\r\n                            <th scope=\"col\">TILL</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody *ngIf=\"TILL\">\r\n                        <tr *ngFor=\"let result of TILL\">\r\n                            <td>{{ result }}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <div class=\"col\">\r\n                <table class=\"table\">\r\n                    <thead class=\"bg-info\">\r\n                        <tr>\r\n                            <th scope=\"col\">TISE</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody *ngIf=\"TISE\">\r\n                        <tr *ngFor=\"let result of TISE\">\r\n                            <td>{{ result }}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <div class=\"col\">\r\n                <table class=\"table\">\r\n                    <thead class=\"bg-info\">\r\n                        <tr>\r\n                            <th scope=\"col\">TIRLL</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody *ngIf=\"TIRLL\">\r\n                        <tr *ngFor=\"let result of TIRLL\">\r\n                            <td>{{ result }}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <div class=\"col\">\r\n                <table class=\"table\">\r\n                    <thead class=\"bg-info\">\r\n                        <tr>\r\n                            <th scope=\"col\">TIISE</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody *ngIf=\"TIISE\">\r\n                        <tr *ngFor=\"let result of TIISE\">\r\n                            <td>{{ result }}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <div class=\"col\">\r\n                <table class=\"table\">\r\n                    <thead class=\"bg-info\">\r\n                        <tr>\r\n                            <th scope=\"col\">TIFSE</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody *ngIf=\"TIFSE\">\r\n                        <tr *ngFor=\"let result of TIFSE\">\r\n                            <td>{{ result }}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <div class=\"col\">\r\n                <table class=\"table\">\r\n                    <thead class=\"bg-info\">\r\n                        <tr>\r\n                            <th scope=\"col\">TIESP</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody *ngIf=\"TIESP\">\r\n                        <tr *ngFor=\"let result of TIESP\">\r\n                            <td>{{ result }}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <div class=\"col\">\r\n                <table class=\"table\">\r\n                    <thead class=\"bg-info\">\r\n                        <tr>\r\n                            <th scope=\"col\">TIESA</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody *ngIf=\"TIESA\">\r\n                        <tr *ngFor=\"let result of TIESA\">\r\n                            <td>{{ result }}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n\r\n    <!-- nueva tabla -->\r\n<div class=\"container mt-5\" style=\"overflow-y: auto; overflow-x: hidden; max-height: 400px\">\r\n    <div class=\"row\">\r\n        <div class=\"col\">\r\n            <table class=\"table\">\r\n                <thead class=\"bg-info\">\r\n                    <tr>\r\n                        <th scope=\"col\">SUMA TIESP</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody *ngIf=\"ALL\">\r\n                    <tr >\r\n                        <td>{{ suma1 }}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        <div class=\"col\">\r\n            <table class=\"table\">\r\n                <thead class=\"bg-info\">\r\n                    <tr>\r\n                        <th scope=\"col\">SUMA TIESA</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody *ngIf=\"TILL\">\r\n                    <tr>\r\n                        <td>{{ suma2 }}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        <div class=\"col\">\r\n            <table class=\"table\">\r\n                <thead class=\"bg-info\">\r\n                    <tr>\r\n                        <th scope=\"col\">PROMEDIO TIESP</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody *ngIf=\"TISE\">\r\n                    <tr>\r\n                        <td>{{ promedio1 }}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        <div class=\"col\">\r\n            <table class=\"table\">\r\n                <thead class=\"bg-info\">\r\n                    <tr>\r\n                        <th scope=\"col\">PROMEDIO TIESA</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody *ngIf=\"TIRLL\">\r\n                    <tr >\r\n                        <td>{{ promedio2 }}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n       \r\n        \r\n    </div>\r\n</div>\r\n</div>\r\n</div>\r\n<br><br>\r\n<div class=\"d-flex justify-content-center align-items-center\">\r\n    <!-- 'ALL': this.ALL, 'TILL':this.TILL, 'TISE': this.TISE, 'TIRLL': this.TIRLL,'TIISE': this.TIISE, 'TIFSE':this.TIFSE, 'TIESP':this.TIESP, 'TIESA':this.TIESA -->\r\n    <img *ngIf=\"mostrar\" src=\"{{url+'graficols/'+ALL+'/'+TILL+'/'+TISE+'/'+TIRLL+'/'+TIISE+'/'+TIFSE+'/'+TIESP+'/'+TIESA}}\" width=\"600px\" />\r\n\r\n</div>","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}